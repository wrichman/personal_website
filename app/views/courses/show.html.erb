


  <div id="sidebar-pop">
    <div class="sb-menu">
  <div class="nav-list">
      <ul>
        <li>
          <a href="/">
            <i class="wic-th-large"></i>
            Home
          </a>
        </li>


        <li>
          <a href="#" onclick="olark('api.box.expand'); return false">
            <i class="wic-edit"></i>
            Request invite to write
          </a>
        </li>

        <li>
          <a href="/will_richman">
            <img alt="Def 30" src="http://static.thinkster.io/assets/def-30-1122f24083b08465a49822bbbd896bbd.png" />
            <strong>Will Richman</strong>
          </a>
        </li>
        


      </ul>
  </div>





      <div class="display-on-mobile">
        <div style="clear:both"></div>
        <div class="toc_wrapper">
          <div class="heading">
            <h1><%= @course.title %></h1>h1>
          </div>
          
    <div class="progress" style="height:25px">
      <div class="progress-bar progress-bar-success"></div>
    </div>

  <div class="bs-sidebar">
    <ul class="nav bs-sidenav">
          <li>
            <a href="#item-526c4f970717fc4a8f000057">
              Introduction
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526c4fc80717fc4a8f000062">
              Source code and PDF eBook
            </a>
          </li>
          <li>
            <a href="#item-526c509e0717fc431c000080">
              Prerequisites
            </a>
          </li>
          <li>
            <a href="#item-526c509e0717fc431c000082">
              The Stack
            </a>
          </li>
          <li>
            <a href="#item-526c514a0717fc431c00009c">
              What is fantasy football?
            </a>
          </li>
          <li>
            <a href="#item-526c50c20717fcb66f000078">
              Makeup of a fantasy team
            </a>
          </li>
          <li>
            <a href="#item-526c51940717fc4a8f000080">
              Active Roster
            </a>
          </li>
          <li>
            <a href="#item-526c51940717fc4a8f00008a">
              Bench
            </a>
          </li>
          <li>
            <a href="#item-526c51940717fc4a8f000092">
              Recap
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526c51d00717fcb66f0000a9">
              Getting Started With Firebase
            </a>
            <ul class="nav">
          <li>
            <a href="#item-5279914b76524ee6c3000174">
              What Am I Actually Dealing With Here?
            </a>
          </li>
          <li>
            <a href="#item-526c5b6f0717fc4a8f000114">
              App Directory
            </a>
          </li>
          <li>
            <a href="#item-526c5e7b0717fcb66f000178">
              Bower
            </a>
          </li>
          <li>
            <a href="#item-526c5e7b0717fcb66f00017b">
              Getting Into AngularJS
            </a>
          </li>
          <li>
            <a href="#item-526c51d00717fcb66f0000ab">
              Authentication with Firebase
            </a>
          </li>
          <li>
            <a href="#item-526c89cb0717fc4a8f000192">
              The User Model
            </a>
          </li>
          <li>
            <a href="#item-526c8a2a0717fc4a8f0001f9">
              Firebase Data
            </a>
          </li>
          <li>
            <a href="#item-526c8aae0717fcb66f00020c">
              Firebase Forge
            </a>
          </li>
          <li>
            <a href="#item-526c8b5d0717fcb66f000288">
              Security and Permissions with Firebase
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526c8c1e0717fc4a8f000270">
              Getting Your Hands Dirty
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526c8aae0717fcb66f00020f">
              angularFire In The Hole!
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526c8aae0717fcb66f000211">
              Building Out The Application
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526c8aae0717fcb66f000212">
              Writing the NFL Service
            </a>
          </li>
          <li>
            <a href="#item-526c978d0717fc30f0000093">
              Writing the NFL Controller
            </a>
          </li>
          <li>
            <a href="#item-526c978d0717fc30f0000097">
              Includes and Dependencies
            </a>
          </li>
          <li>
            <a href="#item-526c98480717fc30f0000139">
              Routing
            </a>
          </li>
          <li>
            <a href="#item-526c98480717fc30f000013f">
              Views
            </a>
          </li>
          <li>
            <a href="#item-526c8aae0717fcb66f000214">
              Building Out The Navbar
            </a>
          </li>
          <li>
            <a href="#item-526c9b1d0717fc4a8f000445">
              Angular View Anti-Pattern
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526c99fe0717fc30f00001ed">
              Playing With Firebase
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526c9ecc0717fc30f0000357">
              League Routing
            </a>
          </li>
          <li>
            <a href="#item-526c9ecc0717fc30f000035a">
              League Services
            </a>
          </li>
          <li>
            <a href="#item-526ca0530717fca04e00028d">
              angularFireCollection
            </a>
          </li>
          <li>
            <a href="#item-526ca0530717fca04e000293">
              League Controller
            </a>
          </li>
          <li>
            <a href="#item-526ca0530717fca04e000298">
              League Views
            </a>
          </li>
          <li>
            <a href="#item-526ca1d70717fc30f0000438">
              Feelin’ Fine About Firebase
            </a>
          </li>
          <li>
            <a href="#item-526ca1d70717fc30f000043b">
              But Wait, There’s More: The Firebase Security API
            </a>
          </li>
          <li>
            <a href="#item-526ca31d0717fc4a8f000537">
              Rules, Rules, Rules
            </a>
          </li>
          <li>
            <a href="#item-526ca31d0717fc4a8f00053b">
              Cutting To The Chase
            </a>
          </li>
          <li>
            <a href="#item-526ca31d0717fc4a8f00053f">
              Tying Up a Few Loose Ends
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526e1b99d90f9923df00013a">
              Building the Player Picker
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526e1b99d90f9923df00013b">
              Don&#39;t Hate the Player, Hate the Game
            </a>
          </li>
          <li>
            <a href="#item-526e1fced90f9923df000277">
              Player Service
            </a>
          </li>
          <li>
            <a href="#item-526e1fced90f9923df000278">
              Player Controller
            </a>
          </li>
          <li>
            <a href="#item-526e1fced90f9923df000279">
              Player Routes and Views
            </a>
          </li>
          <li>
            <a href="#item-526e1fced90f9923df00027a">
              Constructing the Player Filter
            </a>
          </li>
          <li>
            <a href="#item-526e1d66d90f99206600015c">
              Corner Cases
            </a>
          </li>
          <li>
            <a href="#item-526e1e17d90f992066000284">
              Refactor
            </a>
          </li>
          <li>
            <a href="#item-526e9231d90f99661f00032f">
              What&#39;s Next
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526e2089d90f9920660003c4">
              Implementing Fantasy Teams
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526e9330d90f99661f00046c">
              Denormalized Data
            </a>
          </li>
          <li>
            <a href="#item-526e2089d90f9920660003c5">
              Fantasy Team Service
            </a>
          </li>
          <li>
            <a href="#item-526e93b9d90f99661f0005c4">
              Fantasy Team Controller
            </a>
          </li>
          <li>
            <a href="#item-526e93b9d90f99661f0005cb">
              Fantasy Team Views
            </a>
          </li>
          <li>
            <a href="#item-526e9846d90f9920660005c3">
              Fantasy Team Security
            </a>
          </li>
          <li>
            <a href="#item-526e9898d90f9923df0005cb">
              Recap
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526e9846d90f9920660005c4">
              What&#39;s Next
            </a>
            <ul class="nav">
            </ul>
          </li>
    </ul>
  </div>


        </div>
      </div>


    </div>
  </div>


  <div id="content-area" class="picka-app" data-snap-ignore="true">

    <div class="brand-top">
      thinkster
    </div>

    <div id="ca-click-catch"></div>
    
<script>
user_loggedin = true;
pick_id = '526c4f970717fc4a8f000056';
totalitems = 74;
completed_items = [];
</script>

<div class="pick-page"> <!-- page container -->

  <div class="container">

    <div class="alert c-alert">
      <button onclick="mixpanel.track('Dismissed popdown');" type="button" class="close" data-dismiss="alert">&times;</button>
      <span style="font-weight:bolder;font-size:24px">Your progress isn't saved!</span>

      <div>
        <div style="width:55%;margin-right:4%;display:inline-block;font-size:14px;vertical-align:top;padding-top:8px">
          Sign in and we'll remember exactly where you left off the next time you visit - on any of your devices.
        </div>

        <div style="width:39%;display:inline-block;vertical-align:top;margin-top:-30px">
          <div style="margin-bottom:5px">Sign up or sign in with</a></div>


          <div class="btn-group">
            <a id="su-mtracker-twt" href="/auth/twitter" class="btn btn-default">
                  <i class="wic-twitter"></i> Twitter
                </a>


            <a id="su-mtracker-fb" href="/auth/facebook" class="btn btn-default" style="border-left:1px solid #999">
                  <i class="wic-facebook-squared"></i> Facebook
                </a>
          </div>


          <div style="margin-top:5px">or <a href="/register" id="su-mtracker-em">via email.</a></div>
        </div>
      </div>

    </div>

    <div class="row">

      <div class="col col-lg-2 visible-lg">
        <div class="push-top"></diV>
        <div class="sidebar-wrap">


          <div class="author-wrap">

            <div class="name">

              <div class="img-wrap">
                <a href="/Matt">
                  <img alt="Thumb large" class="user-pic" src="http://img.thinkster.io/311033c95c660275fdbd2a4c5968f84d/ed9a9bb9e72a5bda25d16aa9c7572f17/thumb_large.jpg" />
                </a>
                <div style="clear:both"></div>
              </div>

              
              <span class="name-full">
                <a href="/Matt">
                  <%= current_user.first_name %> <%= current_user.last_name %>
                </a>
              </span>
              

              <div class="mini-bio">
                Software engineer, maker, trumpet player, runner. The batteries you need are never included.
              </div>
              


            </div>

            <div class="alert alert-warning sub-wrapper">
              <p>
                <strong>
                    Learn everything about AngularJS.
                </strong>
              </p>
              <p style="font-size:12px">
                There's more coming - enter your email and stay in the loop!
              </p>

              <form accept-charset="UTF-8" action="/sign_up_list" class="subform" id="new_sign_up_list" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="kEhzKnBmiqm5iirtJ8Ej/jHQVVjc2uBtVkbtHwlOje8=" /></div>
                <input class="input-small sub-input-txt" id="sign_up_list_email" name="sign_up_list[email]" placeholder="you@hello.com" type="email" />
                <button type="submit" class="btn btn-primary btn-small sub-input-btn" name="commit">Submit</button>
</form>
            </div>

            <div class="share-box">
              <a href="https://twitter.com/intent/tweet?original_referer=http%3A%2F%2Fwww.thinkster.io%2F&text=AngularJS%20Tutorial%3A%20Learn%20to%20Rapidly%20Build%20Real-time%20Web%20Apps%20with%20Firebase%20 %23AngularJS by @mattfriz&tw_p=tweetbutton&url=http%3A%2F%2Fwww.thinkster.io%2Fpick%2FeHPCs7s87O%2Fangularjs-tutorial-learn-to-rapidly-build-real-time-web-apps-with-firebase%3Fref%3Dtwt" class="" target="_blank">
                <i class="wic-twitter"></i> Tweet this
              </a>

              <a href="https://www.facebook.com/sharer/sharer.php?u=http://www.thinkster.io%2Fpick%2FeHPCs7s87O%2Fangularjs-tutorial-learn-to-rapidly-build-real-time-web-apps-with-firebase%3Fref%3Dfb" class="" target="_blank">
                <i class="wic-facebook-squared"></i> Share on Facebook
              </a>
            </div>

            <div class="clear-all"></div>

          </div>

          <div class="side-float" data-spy="affix">

            <a class="btn btn-primary" style="font-weight:bolder;width:152px;margin-bottom:20px" href="http://gum.co/SUry" target="_blank">Support us!
              <div style="margin-top:5px;white-space: normal;font-size:12px;font-weight:normal;line-height:1.1em">Buy the eBook &amp; source code for only <strong>$25!</strong></div>
            </a>

            
    <div class="progress" style="height:25px">
      <div class="progress-bar progress-bar-success"></div>
    </div>

  <div class="bs-sidebar">
    <ul class="nav bs-sidenav">
          <li>
            <a href="#item-526c4f970717fc4a8f000057">
              Introduction
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526c4fc80717fc4a8f000062">
              Source code and PDF eBook
            </a>
          </li>
          <li>
            <a href="#item-526c509e0717fc431c000080">
              Prerequisites
            </a>
          </li>
          <li>
            <a href="#item-526c509e0717fc431c000082">
              The Stack
            </a>
          </li>
          <li>
            <a href="#item-526c514a0717fc431c00009c">
              What is fantasy football?
            </a>
          </li>
          <li>
            <a href="#item-526c50c20717fcb66f000078">
              Makeup of a fantasy team
            </a>
          </li>
          <li>
            <a href="#item-526c51940717fc4a8f000080">
              Active Roster
            </a>
          </li>
          <li>
            <a href="#item-526c51940717fc4a8f00008a">
              Bench
            </a>
          </li>
          <li>
            <a href="#item-526c51940717fc4a8f000092">
              Recap
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526c51d00717fcb66f0000a9">
              Getting Started With Firebase
            </a>
            <ul class="nav">
          <li>
            <a href="#item-5279914b76524ee6c3000174">
              What Am I Actually Dealing With Here?
            </a>
          </li>
          <li>
            <a href="#item-526c5b6f0717fc4a8f000114">
              App Directory
            </a>
          </li>
          <li>
            <a href="#item-526c5e7b0717fcb66f000178">
              Bower
            </a>
          </li>
          <li>
            <a href="#item-526c5e7b0717fcb66f00017b">
              Getting Into AngularJS
            </a>
          </li>
          <li>
            <a href="#item-526c51d00717fcb66f0000ab">
              Authentication with Firebase
            </a>
          </li>
          <li>
            <a href="#item-526c89cb0717fc4a8f000192">
              The User Model
            </a>
          </li>
          <li>
            <a href="#item-526c8a2a0717fc4a8f0001f9">
              Firebase Data
            </a>
          </li>
          <li>
            <a href="#item-526c8aae0717fcb66f00020c">
              Firebase Forge
            </a>
          </li>
          <li>
            <a href="#item-526c8b5d0717fcb66f000288">
              Security and Permissions with Firebase
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526c8c1e0717fc4a8f000270">
              Getting Your Hands Dirty
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526c8aae0717fcb66f00020f">
              angularFire In The Hole!
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526c8aae0717fcb66f000211">
              Building Out The Application
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526c8aae0717fcb66f000212">
              Writing the NFL Service
            </a>
          </li>
          <li>
            <a href="#item-526c978d0717fc30f0000093">
              Writing the NFL Controller
            </a>
          </li>
          <li>
            <a href="#item-526c978d0717fc30f0000097">
              Includes and Dependencies
            </a>
          </li>
          <li>
            <a href="#item-526c98480717fc30f0000139">
              Routing
            </a>
          </li>
          <li>
            <a href="#item-526c98480717fc30f000013f">
              Views
            </a>
          </li>
          <li>
            <a href="#item-526c8aae0717fcb66f000214">
              Building Out The Navbar
            </a>
          </li>
          <li>
            <a href="#item-526c9b1d0717fc4a8f000445">
              Angular View Anti-Pattern
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526c99fe0717fc30f00001ed">
              Playing With Firebase
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526c9ecc0717fc30f0000357">
              League Routing
            </a>
          </li>
          <li>
            <a href="#item-526c9ecc0717fc30f000035a">
              League Services
            </a>
          </li>
          <li>
            <a href="#item-526ca0530717fca04e00028d">
              angularFireCollection
            </a>
          </li>
          <li>
            <a href="#item-526ca0530717fca04e000293">
              League Controller
            </a>
          </li>
          <li>
            <a href="#item-526ca0530717fca04e000298">
              League Views
            </a>
          </li>
          <li>
            <a href="#item-526ca1d70717fc30f0000438">
              Feelin’ Fine About Firebase
            </a>
          </li>
          <li>
            <a href="#item-526ca1d70717fc30f000043b">
              But Wait, There’s More: The Firebase Security API
            </a>
          </li>
          <li>
            <a href="#item-526ca31d0717fc4a8f000537">
              Rules, Rules, Rules
            </a>
          </li>
          <li>
            <a href="#item-526ca31d0717fc4a8f00053b">
              Cutting To The Chase
            </a>
          </li>
          <li>
            <a href="#item-526ca31d0717fc4a8f00053f">
              Tying Up a Few Loose Ends
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526e1b99d90f9923df00013a">
              Building the Player Picker
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526e1b99d90f9923df00013b">
              Don&#39;t Hate the Player, Hate the Game
            </a>
          </li>
          <li>
            <a href="#item-526e1fced90f9923df000277">
              Player Service
            </a>
          </li>
          <li>
            <a href="#item-526e1fced90f9923df000278">
              Player Controller
            </a>
          </li>
          <li>
            <a href="#item-526e1fced90f9923df000279">
              Player Routes and Views
            </a>
          </li>
          <li>
            <a href="#item-526e1fced90f9923df00027a">
              Constructing the Player Filter
            </a>
          </li>
          <li>
            <a href="#item-526e1d66d90f99206600015c">
              Corner Cases
            </a>
          </li>
          <li>
            <a href="#item-526e1e17d90f992066000284">
              Refactor
            </a>
          </li>
          <li>
            <a href="#item-526e9231d90f99661f00032f">
              What&#39;s Next
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526e2089d90f9920660003c4">
              Implementing Fantasy Teams
            </a>
            <ul class="nav">
          <li>
            <a href="#item-526e9330d90f99661f00046c">
              Denormalized Data
            </a>
          </li>
          <li>
            <a href="#item-526e2089d90f9920660003c5">
              Fantasy Team Service
            </a>
          </li>
          <li>
            <a href="#item-526e93b9d90f99661f0005c4">
              Fantasy Team Controller
            </a>
          </li>
          <li>
            <a href="#item-526e93b9d90f99661f0005cb">
              Fantasy Team Views
            </a>
          </li>
          <li>
            <a href="#item-526e9846d90f9920660005c3">
              Fantasy Team Security
            </a>
          </li>
          <li>
            <a href="#item-526e9898d90f9923df0005cb">
              Recap
            </a>
          </li>
              </ul>
            </li>
          <li>
            <a href="#item-526e9846d90f9920660005c4">
              What&#39;s Next
            </a>
            <ul class="nav">
            </ul>
          </li>
    </ul>
  </div>


          </div><!-- /side-float -->

        </div>



      </div>

        <div class="col col-lg-8 pick-content">
          <div class="push-top"></div>
          
          <h1><%= @course.title %></h1>


            <br>
              <div id="item-526c4f970717fc4a8f000057" class="item-wrap">


  <div class="content-wrapper">

      <h1>Introduction</h1>

  </div>

</div>

              <div id="item-526c4f970717fc4a8f000058" class="item-wrap">


  <div class="content-wrapper">

      <p>In response to the feedback from our <a href="http://www.thinkster.io/pick/GUIDJbpIie/angularjs-tutorial-learn-to-build-modern-web-apps">original tutorial</a>, we decided to take the new version of the tutorial in an entirely new direction. Mucking around in backend code doesn't belong in an AngularJS tutorial, and we've found an elegant solution to this problem.</p>

  </div>

</div>

              <div id="item-526c4fc80717fc4a8f00005e" class="item-wrap">


  <div class="content-wrapper">

      <p>This tutorial will guide you through the process of creating a frontend-only application. Firebase’s firebase.js and angularFire.js libraries offer an entirely new flavor of application: an app built with no backend server or code. The only parts of this application are the AngularJS app, the Firebase data store, and the minimal backend server to deliver the assets to the browser. The tutorial features step-by-step instructions on how to build a fantasy football application, code snippets of the full application, and explanations on design decisions.<br></p>

  </div>

</div>

              <div id="item-526c4fc80717fc4a8f00005f" class="item-wrap">


  <div class="content-wrapper">

      <p>Our intention with this tutorial is to provide the AngularJS community with instructions on how to design and build an ultra-modern application. Firebase is not yet a complete backend server replacement, but it doesn’t intend to be. What it does offer is entirely new: a veritable three-way data binding solution that makes real-time data presentation and handling trivial.<br></p>

  </div>

</div>

              <div id="item-526c4fc80717fc4a8f000060" class="item-wrap">


  <div class="content-wrapper">

      <p>The application you are building will go beyond basic use of AngularJS, and we will attempt to explore as much of the framework as possible. Additionally, we will use Firebase in a number of interesting ways in order to demonstrate its power and flexibility. We also feel strongly about maintaining modernity in a tutorial, so we will keep it congruent with AngularJS as the framework and community matures. This tutorial is built on top of AngularJS v1.2.0rc3. <br></p>

  </div>

</div>

              <div id="item-526c4fc80717fc4a8f000061" class="item-wrap">


  <div class="content-wrapper">

      <p>The tutorial is a living thing, a work in progress. We are constantly extending the tutorial and making changes and corrections. If you find errata, think something should be changed, or would like to suggest an improvement or new section, we would love to hear from you.<br></p>

  </div>

</div>

              <div id="item-526c4fc80717fc4a8f000062" class="item-wrap">


  <div class="content-wrapper">

      <h2>Source code and PDF eBook</h2>

  </div>

</div>

              <div id="item-526c501e0717fcb66f000061" class="item-wrap">


  <div class="content-wrapper">

      <p>This tutorial is provided to you free of charge on the site. We built this in the interest of advancing the AngularJS framework and community.</p>

  </div>

</div>

              <div id="item-526c501e0717fcb66f000062" class="item-wrap">


  <div class="content-wrapper">

      <p>We encourage you to purchase the source code and PDF of this tutorial to help fund our continued efforts in building more material and features for Thinkster. Your money literally goes towards paying our rent and food for the next few months while we make the tutorial even more awesome!<br></p>

  </div>

</div>

              <div id="item-526c501e0717fcb66f000063" class="item-wrap">


  <div class="content-wrapper">

      <p><b><a href="http://gum.co/SUry">Download the source code and PDF eBook here, securely through Gumroad.</a></b></p>

  </div>

</div>

              <div id="item-526c501e0717fcb66f000064" class="item-wrap">


  <div class="content-wrapper">

      <p>All users who purchase the tutorial will have free access to new version of the up-to-date source code and PDF as they are released. <b>The purchase link above gives you the final source code and PDFs for both of our tutorials.</b><br></p>

  </div>

</div>

              <div id="item-526c501e0717fcb66f000065" class="item-wrap">


  <div class="content-wrapper">

      <p>You have 100% ownership over the PDF and source code and can use them however you like.<br></p>

  </div>

</div>

              <div id="item-526c509e0717fc431c000080" class="item-wrap">


  <div class="content-wrapper">

      <h2>Prerequisites</h2>

  </div>

</div>

              <div id="item-526c509e0717fc431c000081" class="item-wrap">


  <div class="content-wrapper">

      <p>This tutorial assumes you already have a working knowledge of AngularJS. Throughout, there will be references to parts of the "<a href="http://www.thinkster.io/pick/GtaQ0oMGIl/a-better-way-to-learn-angularjs">A Better Way to Learn AngularJS</a>" curriculum if you need to clarify or refresh on a certain subject. We recommend going through the entire curriculum before beginning this tutorial.<br></p>

  </div>

</div>

              <div id="item-526c509e0717fc431c000082" class="item-wrap">


  <div class="content-wrapper">

      <h2>The Stack</h2>

  </div>

</div>

              <div id="item-526c50c20717fcb66f000076" class="item-wrap">


  <div class="content-wrapper">

      <p>This application is built on a stack that defies convention. The server the application is served off of exists only to deliver assets. It has no framework, and is not connected to any database. The frontend application you will write talks to Firebase directly.<br></p>

  </div>

</div>

              <div id="item-526c50c20717fcb66f000077" class="item-wrap">


  <div class="content-wrapper">

      <p>We decided to use Firebase because it is more in the spirit of AngularJS and single page application frameworks in general. <br></p>

  </div>

</div>

              <div id="item-526c514a0717fc431c00009c" class="item-wrap">


  <div class="content-wrapper">

      <h2>What is fantasy football?</h2>

  </div>

</div>

              <div id="item-526c50c20717fcb66f000078" class="item-wrap">


  <div class="content-wrapper">

      <p>Fantasy football is centered around creating a “fantasy” team out of real life NFL players, and pitting your fantasy team against other teams. Groups of users, usually 8-12, will create their own teams as part of a “league”, and will compete against other individuals within that league.<br></p>

  </div>

</div>

              <div id="item-526c50c20717fcb66f000078" class="item-wrap">


  <div class="content-wrapper">

      <p>Individuals in a fantasy football league will choose real players in the American National Football League (NFL) for their teams, and these teams will face each other weekly in a one-on-one matchup during actual NFL games. Players in the real games perform actions that score points in fantasy football, and whichever fantasy team scores more points in that matchup wins. Teams with the best win/loss records enter fantasy playoffs, and an eventual champion is selected.<br></p>

  </div>

</div>

              <div id="item-526c50c20717fcb66f000078" class="item-wrap">


  <div class="content-wrapper">

      <h2>Makeup of a fantasy team</h2>

  </div>

</div>

              <div id="item-526c50c20717fcb66f000078" class="item-wrap">


  <div class="content-wrapper">

      <p>There are 32 NFL teams, and your fantasy team will consist of players from some of these teams.<br></p>

  </div>

</div>

              <div id="item-526c514a0717fc431c00009d" class="item-wrap">


  <div class="content-wrapper">

      <p>There are lots of different positions on a NFL team, but for fantasy football purposes, we simplify the different positions greatly: all you have to worry about is Quarterback (QB), Runningback (RB), Wide Receiver (WR), Tight End (TE), Kicker (K), and Defense/Special Teams (D/ST). Defense/Special Teams is a special position on your roster, it represents the entire Defense and Special Teams units, which are made up of many players, for one of the 32 teams. All other players you select will be individual players.</p>

  </div>

</div>

              <div id="item-526c514a0717fc431c00009e" class="item-wrap">


  <div class="content-wrapper">

      <p>How players score points isn’t important right now, you can worry about that later. For those of you familiar with fantasy football, this application will operate under standard scoring rules.</p>

  </div>

</div>

              <div id="item-526c514a0717fc431c00009f" class="item-wrap">


  <div class="content-wrapper">

      <p>Fantasy teams will have 16 members, but only 9 of them will actually count towards scoring in the weekly matchup against another fantasy team. The other 7 will remain on the team’s “bench”, and any points they score will not count towards your team’s total that week. Your team, and every team in the league, will select players in a “fantasy draft” - more about that later. </p>

  </div>

</div>

              <div id="item-526c514a0717fc431c0000a0" class="item-wrap">


  <div class="content-wrapper">

      <p>Your fantasy team’s 9-player active roster will have 1 Quarterback (QB), 2 Runningbacks (RB), 2 Wide Receivers (WR), 1 Tight End (TE), 1 Flex (which can either be a RB, WR, or TE), 1 Kicker (K), and 1 Defense/Special Teams (D/ST). </p>

  </div>

</div>

              <div id="item-526c50c20717fcb66f000078" class="item-wrap">


  <div class="content-wrapper">

      <p>An example 16-man roster might look like the following:<br></p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000080" class="item-wrap">


  <div class="content-wrapper">

      <h3>Active Roster</h3>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000081" class="item-wrap">


  <div class="content-wrapper">

      <p>QB: Aaron Rodgers (GB)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000082" class="item-wrap">


  <div class="content-wrapper">

      <p>RB: Adrian Peterson (MIN)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000083" class="item-wrap">


  <div class="content-wrapper">

      <p>RB: Arian Foster (HOU)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000084" class="item-wrap">


  <div class="content-wrapper">

      <p>WR: Calvin Johnson (DET)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000085" class="item-wrap">


  <div class="content-wrapper">

      <p>WR: A.J. Green (CIN)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000086" class="item-wrap">


  <div class="content-wrapper">

      <p>TE: Jimmy Graham (NO)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000087" class="item-wrap">


  <div class="content-wrapper">

      <p>FLEX: Ray Rice (BAL)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000088" class="item-wrap">


  <div class="content-wrapper">

      <p>K: Stephen Gostkowski (NE)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000089" class="item-wrap">


  <div class="content-wrapper">

      <p>D/ST: Seattle Seahawks<br></p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f00008a" class="item-wrap">


  <div class="content-wrapper">

      <h3>Bench</h3>

  </div>

</div>

              <div id="item-526c51940717fc4a8f00008b" class="item-wrap">


  <div class="content-wrapper">

      <p>TE: Rob Gronkowski (NE)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f00008c" class="item-wrap">


  <div class="content-wrapper">

      <p>RB: Marshawn Lynch (SEA)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f00008d" class="item-wrap">


  <div class="content-wrapper">

      <p>WR: Brandon Marshall (CHI)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f00008e" class="item-wrap">


  <div class="content-wrapper">

      <p>QB: Matt Ryan (ATL)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f00008f" class="item-wrap">


  <div class="content-wrapper">

      <p>RB: C.J. Spiller (BUF)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000090" class="item-wrap">


  <div class="content-wrapper">

      <p>K: Blair Walsh (MIN)</p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000091" class="item-wrap">


  <div class="content-wrapper">

      <p>D/ST: Chicago Bears (CHI)<br></p>

  </div>

</div>

              <div id="item-526c51940717fc4a8f000092" class="item-wrap">


  <div class="content-wrapper">

      <h2>Recap</h2>

  </div>

</div>

              <div id="item-526c51d00717fcb66f0000a8" class="item-wrap">


  <div class="content-wrapper">

      <p>Hopefully some of that stuck, but if a lot of it went over your head, don’t worry. As you build the application, you will begin to understand much more clearly how fantasy football works. Let’s get started!<br></p>

  </div>

</div>

              <div id="item-526c51d00717fcb66f0000a9" class="item-wrap">


  <div class="content-wrapper">

      <h1>Getting Started With Firebase</h1>

  </div>

</div>

              <div id="item-526c51d00717fcb66f0000aa" class="item-wrap">


  <div class="content-wrapper">

      <p>We’ve provided the starting point for the application on github:&nbsp;<a href="https://github.com/msfrisbie/thinkster-firebase-tutorial">https://github.com/msfrisbie/thinkster-firebase-tutorial</a>&nbsp;</p>

  </div>

</div>

              <div id="item-5279a94775793c8bed000440" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="5279a94775793c8bed000440" class="task-box cbox-trigger cbid-5279a94775793c8bed000440">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Clone the application with&nbsp;<i>git clone https://github.com/msfrisbie/thinkster-firebase-tutorial.git</i></p>

  </div>

</div>

              <div id="item-526c51d00717fcb66f0000aa" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c51d00717fcb66f0000aa" class="task-box cbox-trigger cbid-526c51d00717fcb66f0000aa">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>The files are served off of a basic Node server, so you’ll need node.js:&nbsp;<a href="http://howtonode.org/how-to-install-nodejs">http://howtonode.org/how-to-install-nodejs</a></p>

  </div>

</div>

              <div id="item-526c53570717fc4a8f0000c9" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c53570717fc4a8f0000c9" class="task-box cbox-trigger cbid-526c53570717fc4a8f0000c9">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Next, go to <a href="https://www.firebase.com">https://www.firebase.com</a> and sign up for an account<br></p>

  </div>

</div>

              <div id="item-526c53570717fc4a8f0000ca" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c53570717fc4a8f0000ca" class="task-box cbox-trigger cbid-526c53570717fc4a8f0000ca">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Go to <a href="https://www.firebase.com/account/">https://www.firebase.com/account/</a> and create a Firebase. Remember the name you use for the Firebase, you’ll use it in a second.<br></p>

  </div>

</div>

              <div id="item-526c53570717fc4a8f0000cb" class="item-wrap">


  <div class="content-wrapper">

      <p>With all this set up, have everything you need to get started!&nbsp;You won’t be able to create an account or login yet, as you haven’t linked it to your Firebase yet. You first need to initialize the connection to your Firebase.<br></p>

  </div>

</div>

              <div id="item-526c53570717fc4a8f0000cc" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c53570717fc4a8f0000cc" class="task-box cbox-trigger cbid-526c53570717fc4a8f0000cc">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>At the end of app/js/config.js, change the .constant() line and add in your Firebase URL:<br></p>

  </div>

</div>

              <div id="item-526c5b290717fc431c000157" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/config.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:28">
  // your Firebase URL goes here
  // should look something like: https://blahblah.firebaseio.com
  .constant(&#39;FBURL&#39;, &#39;&lt;&lt;FIREBASE_URL_GOES_HERE&gt;&gt;&#39;)</pre>
        <textarea class="codedata" style="display:none">  // your Firebase URL goes here
  // should look something like: https://blahblah.firebaseio.com
  .constant(&#39;FBURL&#39;, &#39;&lt;&lt;FIREBASE_URL_GOES_HERE&gt;&gt;&#39;)</textarea>

  </div>

</div>

              <div id="item-526c5b290717fc431c000158" class="item-wrap">


  <div class="content-wrapper">

      <p>Great! You should now be able to boot the skeleton of the application.&nbsp;</p>

  </div>

</div>

              <div id="item-5279914b76524ee6c3000172" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="5279914b76524ee6c3000172" class="task-box cbox-trigger cbid-5279914b76524ee6c3000172">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Start the server from the app/ directory with <i>node scripts/web-server.js</i></p>

  </div>

</div>

              <div id="item-5279914b76524ee6c3000173" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="5279914b76524ee6c3000173" class="task-box cbox-trigger cbid-5279914b76524ee6c3000173">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Navigate to 'localhost:8000/app/index.html' to see it in action!</p>

  </div>

</div>

              <div id="item-5279914b76524ee6c3000174" class="item-wrap">


  <div class="content-wrapper">

      <h2>What Am I Actually Dealing With Here?</h2>

  </div>

</div>

              <div id="item-526c5b6f0717fc4a8f000113" class="item-wrap">


  <div class="content-wrapper">

      <p>Before you actually get your hands dirty, familiarize yourself with what is provided in the skeleton application.<br></p>

  </div>

</div>

              <div id="item-526c5b6f0717fc4a8f000114" class="item-wrap">


  <div class="content-wrapper">

      <h2>App Directory</h2>

  </div>

</div>

              <div id="item-526c5b6f0717fc4a8f000115" class="item-wrap">


  <div class="content-wrapper">

      <p>All the files we care about on the frontend will live in this folder.&nbsp;<br></p>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f000176" class="item-wrap">


  <div class="content-wrapper">

        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
thinkster-firebase-tutorial/
├── app
│   ├── css
│   │   └── app.css
│   ├── img
│   ├── index.html
│   ├── js
│   │   ├── app.js
│   │   ├── config.js
│   │   ├── controllers
│   │   │   ├── headercontroller.js
│   │   │   ├── signincontroller.js
│   │   │   └── signupcontroller.js
│   │   └── services
│   │       ├── loginservice.js
│   │       └── profilecreator.js
│   ├── lib
│   │   ├── angular
│   │   ├── angular-bootstrap
│   │   ├── angular-cookies
│   │   ├── angular-fire
│   │   ├── angular-mocks
│   │   ├── angular-resource
│   │   ├── angular-route
│   │   ├── angular-scenario
│   │   ├── bootstrap
│   │   ├── firebase
│   │   ├── jquery
│   │   └── json3
│   └── views
│       ├── default.html
│       ├── header.html
│       └── users
│           ├── signin.html
│           └── signup.html
├── bower.json
├── config
│   ├── karma.conf.js
│   ├── karma-e2e.conf.js
│   └── security-rules.json
├── logs
├── README.md
├── scripts
│   ├── e2e-test.bat
│   ├── e2e-test.sh
│   ├── playerimport.html
│   ├── test.bat
│   ├── test.sh
│   ├── watchr.rb
│   └── web-server.js
└── test
    ├── e2e
    │   ├── runner.html
    │   └── scenarios.js
    ├── lib
    │   └── angular
    │       ├── angular-mocks.js
    │       ├── angular-scenario.js
    │       └── version.txt
    └── unit
        ├── configSpec.js
        ├── controllersSpec.js
        ├── directivesSpec.js
        ├── filtersSpec.js
        └── servicesSpec.js</pre>
        <textarea class="codedata" style="display:none">thinkster-firebase-tutorial/
├── app
│   ├── css
│   │   └── app.css
│   ├── img
│   ├── index.html
│   ├── js
│   │   ├── app.js
│   │   ├── config.js
│   │   ├── controllers
│   │   │   ├── headercontroller.js
│   │   │   ├── signincontroller.js
│   │   │   └── signupcontroller.js
│   │   └── services
│   │       ├── loginservice.js
│   │       └── profilecreator.js
│   ├── lib
│   │   ├── angular
│   │   ├── angular-bootstrap
│   │   ├── angular-cookies
│   │   ├── angular-fire
│   │   ├── angular-mocks
│   │   ├── angular-resource
│   │   ├── angular-route
│   │   ├── angular-scenario
│   │   ├── bootstrap
│   │   ├── firebase
│   │   ├── jquery
│   │   └── json3
│   └── views
│       ├── default.html
│       ├── header.html
│       └── users
│           ├── signin.html
│           └── signup.html
├── bower.json
├── config
│   ├── karma.conf.js
│   ├── karma-e2e.conf.js
│   └── security-rules.json
├── logs
├── README.md
├── scripts
│   ├── e2e-test.bat
│   ├── e2e-test.sh
│   ├── playerimport.html
│   ├── test.bat
│   ├── test.sh
│   ├── watchr.rb
│   └── web-server.js
└── test
    ├── e2e
    │   ├── runner.html
    │   └── scenarios.js
    ├── lib
    │   └── angular
    │       ├── angular-mocks.js
    │       ├── angular-scenario.js
    │       └── version.txt
    └── unit
        ├── configSpec.js
        ├── controllersSpec.js
        ├── directivesSpec.js
        ├── filtersSpec.js
        └── servicesSpec.js</textarea>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f000177" class="item-wrap">


  <div class="content-wrapper">

      <p>Your entire AngularJS app will live in the ./js folder, your views will live in the /views folder, and Bower will dump all the library files in the /lib folder. The server will send index.html to the browser, and all other views that are used in the app will be requested by Angular as needed.</p>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f000178" class="item-wrap">


  <div class="content-wrapper">

      <h2>Bower</h2>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f000179" class="item-wrap">


  <div class="content-wrapper">

      <p>Bower is an incredibly robust package manager. If you’ve used Yeoman before to generate an AngularJS skeleton, Bower is included in that package. All packages that your application needs, including Angular and all its dependencies, Bootstrap, jQuery, and Firebase can be acquired and managed with this automation tool.&nbsp;</p>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f00017a" class="item-wrap">


  <div class="content-wrapper">

      <p>The skeleton you cloned off GitHub comes with all the bower packages already in place, but if you wanted to use bower, you would run ‘bower install’ from the /app directory.</p>

  </div>

</div>

              <div id="item-526c5b290717fc431c000159" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c5b290717fc431c000159" class="task-box cbox-trigger cbid-526c5b290717fc431c000159">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Read up on bower <a href="http://bower.io/">here</a>. Follow the instructions listed there to install bower.<br></p>

  </div>

</div>

              <div id="item-526c53570717fc4a8f0000cd" class="item-wrap">


  <div class="content-wrapper">

      <p>With all the packages automatically fetched, you can just refer to them where they live from index.html.<br></p>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f00017b" class="item-wrap">


  <div class="content-wrapper">

      <h2>Getting Into AngularJS<br></h2>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f00017c" class="item-wrap">


  <div class="content-wrapper">

      <p>All of your AngularJS application files will live in the app/js directory. &nbsp;<br></p>

  </div>

</div>

              <div id="item-526c53570717fc4a8f0000ce" class="item-wrap">


  <div class="content-wrapper">

      <p><b>app.js</b> declares the application with all its dependencies</p>

  </div>

</div>

              <div id="item-526c53570717fc4a8f0000ce" class="item-wrap">


  <div class="content-wrapper">

      <p><b>config.js</b> defines the routes, initializes the angularFireAuth module, and declares your Firebase URL as a constant</p>

  </div>

</div>

              <div id="item-526c53570717fc4a8f0000ce" class="item-wrap">


  <div class="content-wrapper">

      <p>The <b>controllers</b>/ directory contains all your application controllers, separated into their own files. You will continue this separate file convention as the application grows.</p>

  </div>

</div>

              <div id="item-526c53570717fc4a8f0000ce" class="item-wrap">


  <div class="content-wrapper">

      <p>The <b>services/</b> directory contains all your application services, following the same file convention as controllers.</p>

  </div>

</div>

              <div id="item-526c53570717fc4a8f0000ce" class="item-wrap">


  <div class="content-wrapper">

      <p>The <b>directives/</b> and <b>filters/</b> directories are empty, but they will contain all your custom Angular directives and filters.</p>

  </div>

</div>

              <div id="item-526c51d00717fcb66f0000ab" class="item-wrap">


  <div class="content-wrapper">

      <h2>Authentication with Firebase</h2>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f00017d" class="item-wrap">


  <div class="content-wrapper">

      <p>Of course, it is infeasible to entrust all of authentication to the client, as we must assume the client has control of every aspect of the execution environment. Firebase offers its own flavor of authentication which is available to us through the angularFireAuth module.</p>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f00017e" class="item-wrap">


  <div class="content-wrapper">

      <p>Firebase Simple Login allows for authentication through Facebook, Twitter, Github, or even custom authentication solutions. Here, though, we only need an email/password pair for each individual user, and Firebase’s Simple Login allows for this too.</p>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f00017f" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/config.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

// Declare app level module which depends on filters, and services
angular.module(&#39;fantasyApp.config&#39;, [])

app.config([&#39;$routeProvider&#39;, 
    function($routeProvider) {
      $routeProvider
      .when(&#39;/&#39;,        { templateUrl: &#39;views/default.html&#39; })
      .when(&#39;/signin&#39;,  { templateUrl: &#39;views/users/signin.html&#39; })
      .when(&#39;/signup&#39;,  { templateUrl: &#39;views/users/signup.html&#39; })
      .otherwise(       { redirectTo: &#39;/&#39; });
    }])
  
  // establish authentication
  .run([&#39;angularFireAuth&#39;, &#39;FBURL&#39;, &#39;$rootScope&#39;, 
    function(angularFireAuth, FBURL, $rootScope) {
      angularFireAuth.initialize(new Firebase(FBURL), {scope: $rootScope, name: &#39;auth&#39;, path: &#39;/signin&#39;});
      $rootScope.FBURL = FBURL;
    }])</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

// Declare app level module which depends on filters, and services
angular.module(&#39;fantasyApp.config&#39;, [])

app.config([&#39;$routeProvider&#39;, 
    function($routeProvider) {
      $routeProvider
      .when(&#39;/&#39;,        { templateUrl: &#39;views/default.html&#39; })
      .when(&#39;/signin&#39;,  { templateUrl: &#39;views/users/signin.html&#39; })
      .when(&#39;/signup&#39;,  { templateUrl: &#39;views/users/signup.html&#39; })
      .otherwise(       { redirectTo: &#39;/&#39; });
    }])
  
  // establish authentication
  .run([&#39;angularFireAuth&#39;, &#39;FBURL&#39;, &#39;$rootScope&#39;, 
    function(angularFireAuth, FBURL, $rootScope) {
      angularFireAuth.initialize(new Firebase(FBURL), {scope: $rootScope, name: &#39;auth&#39;, path: &#39;/signin&#39;});
      $rootScope.FBURL = FBURL;
    }])</textarea>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f000180" class="item-wrap">


  <div class="content-wrapper">

      <p>In config.js, we see that when angularFireAuth is initialized, we pass it ‘auth’ as the name attribute. This means that, when the user is logged in, the user authentication object will be attached to the $scope.auth object. When the user is logged out, the $scope.auth attribute will not exist.<br></p>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f000182" class="item-wrap">


  <div class="content-wrapper">

      <p>Bear in mind that this does not mean we can just use this for all user data. The Firebase auth object stores the email and password combination, nothing more. If we want to store additional information about the user, we will need to create a separate “model” that is keyed with the authentication ID.&nbsp;</p>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f000183" class="item-wrap">


  <div class="content-wrapper">

      <p>angularFireAuth will emit an event on login, logout, and on error: “angularFireAuth:login”, “angularFireAuth:logout”, and “angularFireAuth:error”, respectively. Obviously, these events will fire when the client encounters each of these angularFireAuth actions. In addition, if the user session has not expired, this event will fire every time there is a new application load - so if you perform a full reload of a page after logging in, the event will fire again when the page is loaded so you can handle authentication state functionality in a semi-synchronous manner.</p>

  </div>

</div>

              <div id="item-526c5e7b0717fcb66f000184" class="item-wrap">


  <div class="content-wrapper">

      <p>The existing code for login/logout is more or less boilerplate, most of it is trivial to understand from mere examination. However, knowing the basic Firebase authentication components is essential.</p>

  </div>

</div>

              <div id="item-526c89cb0717fc4a8f000192" class="item-wrap">


  <div class="content-wrapper">

      <h2>The User Model</h2>

  </div>

</div>

              <div id="item-526c89cb0717fc4a8f000193" class="item-wrap">


  <div class="content-wrapper">

      <p>Now, as mentioned before, angularFireAuth only serves to identify the current user, and doesn’t hold any information about them (for example, their name). Returning to the signin/signup controllers, we see that the $scope.login() method invokes a login() method on the loginService, which was injected to the controller. The service:<br></p>

  </div>

</div>

              <div id="item-526c89cb0717fc4a8f000194" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/services/loginservice.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.login&#39;, [&#39;fantasyApp.services.profileCreator&#39;])
  .factory(&#39;loginService&#39;, [&#39;angularFireAuth&#39;, &#39;profileCreator&#39;, &#39;$location&#39;, &#39;$rootScope&#39;,
    function(angularFireAuth, profileCreator, $location, $rootScope) {
      return {
        login: function(email, pass, redirect, callback) {
          var p = angularFireAuth.login(&#39;password&#39;, {
            email: email,
            password: pass,
            rememberMe: true
          });
          p.then(function(user) {
            if( redirect ) {
              $location.path(redirect);
            }
            callback &amp;&amp; callback(null, user);
          }, callback);
        },
        logout: function(redirectPath) {
          angularFireAuth.logout();
          if(redirectPath) {
            $location.path(redirectPath);
          }
        },
        createAccount: function(name, email, pass, callback) {
          angularFireAuth._authClient.createUser(email, pass, function(err, user) {
            if(callback) {
              callback(err, user);
              $rootScope.$apply();
            }
          });
        },
        createProfile: profileCreator
      }
    }])
</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.login&#39;, [&#39;fantasyApp.services.profileCreator&#39;])
  .factory(&#39;loginService&#39;, [&#39;angularFireAuth&#39;, &#39;profileCreator&#39;, &#39;$location&#39;, &#39;$rootScope&#39;,
    function(angularFireAuth, profileCreator, $location, $rootScope) {
      return {
        login: function(email, pass, redirect, callback) {
          var p = angularFireAuth.login(&#39;password&#39;, {
            email: email,
            password: pass,
            rememberMe: true
          });
          p.then(function(user) {
            if( redirect ) {
              $location.path(redirect);
            }
            callback &amp;&amp; callback(null, user);
          }, callback);
        },
        logout: function(redirectPath) {
          angularFireAuth.logout();
          if(redirectPath) {
            $location.path(redirectPath);
          }
        },
        createAccount: function(name, email, pass, callback) {
          angularFireAuth._authClient.createUser(email, pass, function(err, user) {
            if(callback) {
              callback(err, user);
              $rootScope.$apply();
            }
          });
        },
        createProfile: profileCreator
      }
    }])
</textarea>

  </div>

</div>

              <div id="item-526c89cb0717fc4a8f000195" class="item-wrap">


  <div class="content-wrapper">

      <p>Most of the code here, as mentioned before, is merely wrapping the angularFireAuth authentication methods. It exposes the login(), logout() and createAccount() methods, which all function as you would expect.</p>

  </div>

</div>

              <div id="item-526c89cb0717fc4a8f000196" class="item-wrap">


  <div class="content-wrapper">

      <p>Next, let’s move to the process of account creation. This is the method in the signup controller that is executed to create a new user:</p>

  </div>

</div>

              <div id="item-526c89cb0717fc4a8f000197" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/signupcontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:25">
      $scope.createAccount = function() {
        if( !$scope.email ) {
          $scope.err = &#39;Please enter an email address&#39;;
        }
        else if( !$scope.pass ) {
          $scope.err = &#39;Please enter a password&#39;;
        }
        else {
          loginService.createAccount($scope.name, $scope.email, $scope.pass, function(err, user) {
            if( err ) {
              $scope.err = err;
            }
            else {
              $scope.login(function(err) {
                if( !err ) {
                  loginService.createProfile(user.id, $scope.name, user.email);
                }
              });
            }
          });
        }
      };</pre>
        <textarea class="codedata" style="display:none">      $scope.createAccount = function() {
        if( !$scope.email ) {
          $scope.err = &#39;Please enter an email address&#39;;
        }
        else if( !$scope.pass ) {
          $scope.err = &#39;Please enter a password&#39;;
        }
        else {
          loginService.createAccount($scope.name, $scope.email, $scope.pass, function(err, user) {
            if( err ) {
              $scope.err = err;
            }
            else {
              $scope.login(function(err) {
                if( !err ) {
                  loginService.createProfile(user.id, $scope.name, user.email);
                }
              });
            }
          });
        }
      };</textarea>

  </div>

</div>

              <div id="item-526c89cb0717fc4a8f000198" class="item-wrap">


  <div class="content-wrapper">

      <p>When a user is creating an account, &nbsp;the createAccount() method in signupcontroller.js will invoke the loginService.createAccount() method, which uses angularFireAuth to create a new user with an email/password pair. After angularFireAuth successfully handles the creation of a new account, the controller will pass this new user object, along with all the User model attributes from the account creation form, to the loginService.createProfile() method.<br></p>

  </div>

</div>

              <div id="item-526c8a2a0717fc4a8f0001f6" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/services/profilecreator.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.profileCreator&#39;, [])
  .factory(&#39;profileCreator&#39;, [&#39;Firebase&#39;, &#39;FBURL&#39;, &#39;$rootScope&#39;, function(Firebase, FBURL, $rootScope) {
    return function(id, name, email, callback) {
      new Firebase(FBURL).child(&#39;users/&#39;+id).set({email: email, name: name}, function(err) {
        if( callback ) {
          callback(err);
          $rootScope.$apply();
        }
      });
    }
  }]);</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.profileCreator&#39;, [])
  .factory(&#39;profileCreator&#39;, [&#39;Firebase&#39;, &#39;FBURL&#39;, &#39;$rootScope&#39;, function(Firebase, FBURL, $rootScope) {
    return function(id, name, email, callback) {
      new Firebase(FBURL).child(&#39;users/&#39;+id).set({email: email, name: name}, function(err) {
        if( callback ) {
          callback(err);
          $rootScope.$apply();
        }
      });
    }
  }]);</textarea>

  </div>

</div>

              <div id="item-526c8a2a0717fc4a8f0001f7" class="item-wrap">


  <div class="content-wrapper">

      <p>Although this service is shorter, it’s more important because we are seeing an instance of Firebase binding for the first time. The returned function creates a Firebase reference to the location of the specific user (which doesn’t exist yet), and inserts the email and name data there. On success, it invokes the function(err) {} callback.</p>

  </div>

</div>

              <div id="item-526c8a2a0717fc4a8f0001f8" class="item-wrap">


  <div class="content-wrapper">

      <p>I know, there’s a lot to digest there. Let’s work through it piece by piece.<br></p>

  </div>

</div>

              <div id="item-526c8a2a0717fc4a8f0001f9" class="item-wrap">


  <div class="content-wrapper">

      <h2>Firebase Data</h2>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f000207" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c8aae0717fcb66f000207" class="task-box cbox-trigger cbid-526c8aae0717fcb66f000207">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Read through the <a href="https://www.firebase.com/docs/creating-references.html">Firebase documentation on creating references</a></p>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f000208" class="item-wrap">


  <div class="content-wrapper">

      <p>In the profileCreator service, you saw the following line:<br></p>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f000209" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/services/profilecreator.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:6">
new Firebase(FBURL).child(&#39;users/&#39;+id).set({email: email, name: name}, function(err) { … })</pre>
        <textarea class="codedata" style="display:none">new Firebase(FBURL).child(&#39;users/&#39;+id).set({email: email, name: name}, function(err) { … })</textarea>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f00020a" class="item-wrap">


  <div class="content-wrapper">

      <p>As described in the article above, this creates a reference to Firebase data. It could be a string, it could be the parent object of a tall tree of object attributes, it doesn't even have to exist. It serves to expose a <a href="https://www.firebase.com/docs/javascript/firebase/index.html">set of methods</a>&nbsp;on this location which can perform CRUD operations, traverse the data hierarchy, or any number of things.<br></p>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f00020b" class="item-wrap">


  <div class="content-wrapper">

      <p>This particular line creates a reference to the root Firebase instance. The child() method shifts the reference to the users/id location, which doesn't exist yet. It invokes the set() method to pass an object to be written to that location.&nbsp;<br></p>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f00020c" class="item-wrap">


  <div class="content-wrapper">

      <h2>Firebase Forge</h2>

  </div>

</div>

              <div id="item-526c8b5d0717fcb66f000287" class="item-wrap">


  <div class="content-wrapper">

      <p>One awesome thing about Firebase is the Forge. It is a GUI that you can use in a browser to view and edit the data in your Firebase, as well as a ton of other things. Once you’re logged in to the Firebase website, you can visit the Forge for one of your Firebases by just directing your browser to the Firebase URL you put into the config.js file: &lt;firebasename&gt;.firebaseio.com.<br></p>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f00020d" class="item-wrap">


  <div class="content-wrapper">

      <p>Here, you will be able to see your user data be inserted in real time. The Firebase Forge is a surprisingly powerful tool, especially when debugging. There are many features of the Forge that we will get to later.<br></p>

  </div>

</div>

              <div id="item-526c8b5d0717fcb66f000288" class="item-wrap">


  <div class="content-wrapper">

      <h2>Security and Permissions with Firebase<br></h2>

  </div>

</div>

              <div id="item-526c8b5d0717fcb66f000289" class="item-wrap">


  <div class="content-wrapper">

      <p>One other piece of functionality that AngularJS cannot feasibly handle by itself is data access permissions. For the same reasons that a client cannot assess by itself whether or not a user is who they say they are, the client also cannot be trusted to assess whether or not data can be accessed on Firebase. Enter the Firebase security API.<br></p>

  </div>

</div>

              <div id="item-526c8b5d0717fcb66f00028a" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c8b5d0717fcb66f00028a" class="task-box cbox-trigger cbid-526c8b5d0717fcb66f00028a">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Read through the blog post and watch the video introducing the <a href="https://www.firebase.com/blog/2012-12-18-the-new-firebase-security-api.html">Firebase Security API</a></p>

  </div>

</div>

              <div id="item-526c8b5d0717fcb66f00028b" class="item-wrap">


  <div class="content-wrapper">

      <p>Inside the Firebase Forge, the “Security” section allows you to define your security rules for data access. The rules are written in quasi-JSON syntax, and make it very easy to validate data and prevent unwanted access. The default you’ll see there is a read-all, write-all permission, but we’ll be changing that later.<br></p>

  </div>

</div>

              <div id="item-526c8c1e0717fc4a8f000270" class="item-wrap">


  <div class="content-wrapper">

      <h1>Getting Your Hands Dirty</h1>

  </div>

</div>

              <div id="item-526c8c1e0717fc4a8f000271" class="item-wrap">


  <div class="content-wrapper">

      <p>Awesome! We now have everything we need to start digging into the meat of the application.</p>

  </div>

</div>

              <div id="item-526c8c1e0717fc4a8f000273" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c8c1e0717fc4a8f000273" class="task-box cbox-trigger cbid-526c8c1e0717fc4a8f000273">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>In the Firebase Forge, navigate to the ‘Auth’ section. Under the ‘Authentication Providers’ header, select the ‘Email &amp; Password’ option, and check ‘Enable’.&nbsp;</p>

  </div>

</div>

              <div id="item-526c8c1e0717fc4a8f000274" class="item-wrap">


  <div class="content-wrapper">

      <p>This will allow account creation in this Firebase.&nbsp;Under ‘Registered Users’, you’ll be able to manage the email/password pairs that represent individual accounts.</p>

  </div>

</div>

              <div id="item-526c8c1e0717fc4a8f000275" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c8c1e0717fc4a8f000275" class="task-box cbox-trigger cbid-526c8c1e0717fc4a8f000275">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Create an account, and log in to the application.&nbsp;</p>

  </div>

</div>

              <div id="item-526c8c1e0717fc4a8f000276" class="item-wrap">


  <div class="content-wrapper">

      <p>You can’t do anything yet besides login and logout, but let’s go ahead and start writing some code. If you poke around a bit, you might have noticed that, when you’re logged in, you can still navigate to the #/signin and #/signout routes, and see the forms. This isn't horrible, but we would prefer to prevent the user from seeing these at all when they’re logged in to avoid confusion.&nbsp;<br></p>

  </div>

</div>

              <div id="item-526c8c1e0717fc4a8f000277" class="item-wrap">


  <div class="content-wrapper">

      <p>To do this, we’ll use the $scope.auth variable we mentioned before to check if the user is logged in. If they are, we’ll just redirect them to the main page.&nbsp;<br></p>

  </div>

</div>

              <div id="item-526c8e720717fca04e00008d" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c8e720717fca04e00008d" class="task-box cbox-trigger cbid-526c8e720717fca04e00008d">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Do this for both the Signup controller and the Signin controller as shown:</p>

  </div>

</div>

              <div id="item-526c8e720717fca04e00008e" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/signupcontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.signup&#39;, [])
  .controller(&#39;SignupCtrl&#39;, [&#39;$scope&#39;, &#39;loginService&#39;, &#39;$location&#39;,
    function($scope, loginService, $location) {

      if (!!$scope.auth) {
        $location.path(&#39;/&#39;);
      }

      $scope.$on(&#39;angularFireAuth:login&#39;, function () {
        $location.path(&#39;/&#39;);
      })</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.signup&#39;, [])
  .controller(&#39;SignupCtrl&#39;, [&#39;$scope&#39;, &#39;loginService&#39;, &#39;$location&#39;,
    function($scope, loginService, $location) {

      if (!!$scope.auth) {
        $location.path(&#39;/&#39;);
      }

      $scope.$on(&#39;angularFireAuth:login&#39;, function () {
        $location.path(&#39;/&#39;);
      })</textarea>

  </div>

</div>

              <div id="item-526c8e720717fca04e00008f" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/signincontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.signin&#39;, [&#39;fantasyApp.services.login&#39;])
  .controller(&#39;SigninCtrl&#39;, [&#39;$scope&#39;, &#39;loginService&#39;, &#39;$location&#39;,
    function($scope, loginService, $location) {

      if (!!$scope.auth) {
        $location.path(&#39;/&#39;);
      }

      $scope.$on(&#39;angularFireAuth:login&#39;, function () {
        $location.path(&#39;/&#39;);
      })</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.signin&#39;, [&#39;fantasyApp.services.login&#39;])
  .controller(&#39;SigninCtrl&#39;, [&#39;$scope&#39;, &#39;loginService&#39;, &#39;$location&#39;,
    function($scope, loginService, $location) {

      if (!!$scope.auth) {
        $location.path(&#39;/&#39;);
      }

      $scope.$on(&#39;angularFireAuth:login&#39;, function () {
        $location.path(&#39;/&#39;);
      })</textarea>

  </div>

</div>

              <div id="item-526c8e720717fca04e000090" class="item-wrap">


  <div class="content-wrapper">

      <p>Now that we have the user data available to us, let’s put it to use. Check out headercontroller.js:<br></p>

  </div>

</div>

              <div id="item-526c8f380717fc4a8f0002f8" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/headercontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.header&#39;, [&#39;fantasyApp.services.login&#39;])
  .controller(&#39;HeaderController&#39;, [&#39;$scope&#39;, &#39;$location&#39;, &#39;loginService&#39;, &#39;angularFire&#39;, &#39;FBURL&#39;, 
    function($scope, $location, loginService, angularFire, FBURL) {

      $scope.$on(&#39;angularFireAuth:login&#39;, function() {

      });

      $scope.logout = function() {
        loginService.logout(&#39;/signin&#39;);
      };

      $scope.navbarEntries = [
      ];
    }])</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.header&#39;, [&#39;fantasyApp.services.login&#39;])
  .controller(&#39;HeaderController&#39;, [&#39;$scope&#39;, &#39;$location&#39;, &#39;loginService&#39;, &#39;angularFire&#39;, &#39;FBURL&#39;, 
    function($scope, $location, loginService, angularFire, FBURL) {

      $scope.$on(&#39;angularFireAuth:login&#39;, function() {

      });

      $scope.logout = function() {
        loginService.logout(&#39;/signin&#39;);
      };

      $scope.navbarEntries = [
      ];
    }])</textarea>

  </div>

</div>

              <div id="item-526c8f380717fc4a8f0002f9" class="item-wrap">


  <div class="content-wrapper">

      <p>Let’s focus on the ‘angularFireAuth:login’ event, which currently invokes an empty function. We want to display the user’s name in the header when they’re logged in, and we know where to get it now - we can construct a reference to it as we did in the profileCreator service. This brings us to the angularFire library for the first time.</p>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f00020f" class="item-wrap">


  <div class="content-wrapper">

      <h2>angularFire In The Hole!</h2>

  </div>

</div>

              <div id="item-526c8f380717fc4a8f0002fa" class="item-wrap">


  <div class="content-wrapper">

      <p>It’s easy to get confused on how angularFire.js and firebase.js are used together, but the distinction is a critically important one.&nbsp;<br></p>

  </div>

</div>

              <div id="item-526c8f380717fc4a8f0002fb" class="item-wrap">


  <div class="content-wrapper">

      <p>angularFire will bind the data in Firebase to a scope model, which in turn is bound to the view. This offers an effective 3-way data binding, where the data in the view is a real-time representation of the data that is in your Firebase. The binding listens for the Firebase data change events, and updates the models accordingly. Best of all, we don’t have to worry about any of this.</p>

  </div>

</div>

              <div id="item-526c8f380717fc4a8f0002fc" class="item-wrap">


  <div class="content-wrapper">

      <p>Let’s use angularFire for the first time. In header.html, you can see that when a user is logged in, they will just see the placeholder instead of their own. We’re going to define the user model on the $scope right after this, so interpolate the name attribute of the user.</p>

  </div>

</div>

              <div id="item-526c8fcd0717fca04e000114" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/header.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:12">
      &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;
        {{ user.name }}&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;
      &lt;/a&gt;</pre>
        <textarea class="codedata" style="display:none">      &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;
        {{ user.name }}&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;
      &lt;/a&gt;</textarea>

  </div>

</div>

              <div id="item-526c8fcd0717fca04e000115" class="item-wrap">


  <div class="content-wrapper">

      <p>Obviously, the user model isn’t doing anything yet, so let’s change that. Inside the angularFireAuth:login event callback function, bind the user data in your Firebase to the user model on the scope:</p>

  </div>

</div>

              <div id="item-526c8fcd0717fca04e000116" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/headercontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:7">
      $scope.$on(&#39;angularFireAuth:login&#39;, function() {
        angularFire(new Firebase(FBURL+&#39;/users/&#39;+$scope.auth.id), $scope, &#39;user&#39;);
      });</pre>
        <textarea class="codedata" style="display:none">      $scope.$on(&#39;angularFireAuth:login&#39;, function() {
        angularFire(new Firebase(FBURL+&#39;/users/&#39;+$scope.auth.id), $scope, &#39;user&#39;);
      });</textarea>

  </div>

</div>

              <div id="item-526c8fcd0717fca04e000117" class="item-wrap">


  <div class="content-wrapper">

      <p>angularFire() takes three parameters: the reference to the data that we want bound to the model, the $scope object we are binding to, and the stringified version of the model name we are binding to. Once this is invoked, the Firebase data will be updated in real time, and we can always assume that the data displayed to the user is correct.</p>

  </div>

</div>

              <div id="item-526c8fcd0717fca04e000118" class="item-wrap">


  <div class="content-wrapper">

      <p>This introduces an interesting design pattern that will persist throughout the rest of this tutorial. Unlike traditional CRUD applications, where one is involved in the tedium of handoffs of data from server to frontend, the user is always viewing and editing the data as it exists everywhere, for all users.</p>

  </div>

</div>

              <div id="item-526c8fcd0717fca04e000119" class="item-wrap">


  <div class="content-wrapper">

      <p>With the angularFire() call in place, you should now be able to see your name in the header of the application. You can test the realtime data binding by changing your name in the Firebase Forge editor, and then seeing it change in the browser.</p>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f000211" class="item-wrap">


  <div class="content-wrapper">

      <h1>Building Out The Application<br></h1>

  </div>

</div>

              <div id="item-526c90440717fc4a8f000388" class="item-wrap">


  <div class="content-wrapper">

      <p>Now that you have authentication all taken care of, let’s move on to building out the application.</p>

  </div>

</div>

              <div id="item-526c90440717fc4a8f000389" class="item-wrap">


  <div class="content-wrapper">

      <p>The 32 NFL teams and the data about them is about as static as data gets, so instead of serving this from the server every time, it makes more sense to just provide them in a service. Players and other entities that refer to teams will just provide a team index, and the Angular service will take care of the rest.</p>

  </div>

</div>

              <div id="item-526c90440717fc4a8f00038a" class="item-wrap">


  <div class="content-wrapper">

      <p>At this point, it’s important to establish a naming convention for your application. Since ‘team’ could refer to either a NFL team or a fantasy team, you will refer to one as NFLTeam, and one as FantasyTeam in all directories, files, and code.</p>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f000212" class="item-wrap">


  <div class="content-wrapper">

      <h2>Writing the NFL Service<br></h2>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f000213" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c8aae0717fcb66f000213" class="task-box cbox-trigger cbid-526c8aae0717fcb66f000213">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Create a new service file, nflservice.js:<br></p>

  </div>

</div>

              <div id="item-526c978d0717fc30f0000091" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/services/nflservice.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
angular.module(&#39;fantasyApp.services.nfl&#39;, [])
  .factory(&#39;NFL&#39;, function() {
    var NFL = {};
    NFL.teams = [
      {&quot;abbr&quot;:&quot;ARI&quot;, &quot;team&quot;:&quot;Arizona&quot;,        &quot;mascot&quot;: &quot;Cardinals&quot;,  &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;ATL&quot;, &quot;team&quot;:&quot;Atlanta&quot;,        &quot;mascot&quot;: &quot;Falcons&quot;,    &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;BAL&quot;, &quot;team&quot;:&quot;Baltimore&quot;,      &quot;mascot&quot;: &quot;Ravens&quot;,     &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;BUF&quot;, &quot;team&quot;:&quot;Buffalo&quot;,        &quot;mascot&quot;: &quot;Bills&quot;,      &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;CAR&quot;, &quot;team&quot;:&quot;Carolina&quot;,       &quot;mascot&quot;: &quot;Panthers&quot;,   &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;CHI&quot;, &quot;team&quot;:&quot;Chicago&quot;,        &quot;mascot&quot;: &quot;Bears&quot;,      &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;CIN&quot;, &quot;team&quot;:&quot;Cincinnati&quot;,     &quot;mascot&quot;: &quot;Bengals&quot;,    &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;CLE&quot;, &quot;team&quot;:&quot;Cleveland&quot;,      &quot;mascot&quot;: &quot;Browns&quot;,     &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;DAL&quot;, &quot;team&quot;:&quot;Dallas&quot;,         &quot;mascot&quot;: &quot;Cowboys&quot;,    &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;DEN&quot;, &quot;team&quot;:&quot;Denver&quot;,         &quot;mascot&quot;: &quot;Broncos&quot;,    &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;DET&quot;, &quot;team&quot;:&quot;Detroit&quot;,        &quot;mascot&quot;: &quot;Lions&quot;,      &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;GB&quot;,  &quot;team&quot;:&quot;Green Bay&quot;,      &quot;mascot&quot;: &quot;Packers&quot;,    &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;HOU&quot;, &quot;team&quot;:&quot;Houston&quot;,        &quot;mascot&quot;: &quot;Texans&quot;,     &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;IND&quot;, &quot;team&quot;:&quot;Indianapolis&quot;,   &quot;mascot&quot;: &quot;Colts&quot;,      &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;JAC&quot;, &quot;team&quot;:&quot;Jacksonville&quot;,   &quot;mascot&quot;: &quot;Jaguars&quot;,    &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;KC&quot;,  &quot;team&quot;:&quot;Kansas City&quot;,    &quot;mascot&quot;: &quot;Chiefs&quot;,     &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;MIA&quot;, &quot;team&quot;:&quot;Miami&quot;,          &quot;mascot&quot;: &quot;Dolphins&quot;,   &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;MIN&quot;, &quot;team&quot;:&quot;Minnesota&quot;,      &quot;mascot&quot;: &quot;Vikings&quot;,    &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;NE&quot;,  &quot;team&quot;:&quot;New England&quot;,    &quot;mascot&quot;: &quot;Patriots&quot;,   &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;NO&quot;,  &quot;team&quot;:&quot;New Orleans&quot;,    &quot;mascot&quot;: &quot;Saints&quot;,     &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;NYG&quot;, &quot;team&quot;:&quot;New York&quot;,       &quot;mascot&quot;: &quot;Giants&quot;,     &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;NYJ&quot;, &quot;team&quot;:&quot;New York&quot;,       &quot;mascot&quot;: &quot;Jets&quot;,       &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;OAK&quot;, &quot;team&quot;:&quot;Oakland&quot;,        &quot;mascot&quot;: &quot;Raiders&quot;,    &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;PHI&quot;, &quot;team&quot;:&quot;Philadelphia&quot;,   &quot;mascot&quot;: &quot;Eagles&quot;,     &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;PIT&quot;, &quot;team&quot;:&quot;Pittsburgh&quot;,     &quot;mascot&quot;: &quot;Steelers&quot;,   &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;SD&quot;,  &quot;team&quot;:&quot;San Diego&quot;,      &quot;mascot&quot;: &quot;Chargers&quot;,   &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;SEA&quot;, &quot;team&quot;:&quot;Seattle&quot;,        &quot;mascot&quot;: &quot;Seahawks&quot;,   &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;SF&quot;,  &quot;team&quot;:&quot;San Francisco&quot;,  &quot;mascot&quot;: &quot;49ers&quot;,      &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;STL&quot;, &quot;team&quot;:&quot;St. Louis&quot;,      &quot;mascot&quot;: &quot;Rams&quot;,       &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;TB&quot;,  &quot;team&quot;:&quot;Tampa Bay&quot;,      &quot;mascot&quot;: &quot;Buccaneers&quot;, &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;TEN&quot;, &quot;team&quot;:&quot;Tennessee&quot;,      &quot;mascot&quot;: &quot;Titans&quot;,     &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;WAS&quot;, &quot;team&quot;:&quot;Washington&quot;,     &quot;mascot&quot;: &quot;Redskins&quot;,   &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;East&quot;}
    ];
    NFL.positions = [
      {&quot;abbr&quot;:&quot;QB&quot;,  &quot;pos&quot;:&quot;Quarterback&quot;},
      {&quot;abbr&quot;:&quot;RB&quot;,  &quot;pos&quot;:&quot;Runningback&quot;},
      {&quot;abbr&quot;:&quot;WR&quot;,  &quot;pos&quot;:&quot;Wide Receiver&quot;},
      {&quot;abbr&quot;:&quot;TE&quot;,  &quot;pos&quot;:&quot;Tight End&quot;},
      {&quot;abbr&quot;:&quot;K&quot;,   &quot;pos&quot;:&quot;Kicker&quot;},
      {&quot;abbr&quot;:&quot;D/ST&quot;,&quot;pos&quot;:&quot;Defense/Special Teams&quot;}
    ];
    return NFL;
  });</pre>
        <textarea class="codedata" style="display:none">angular.module(&#39;fantasyApp.services.nfl&#39;, [])
  .factory(&#39;NFL&#39;, function() {
    var NFL = {};
    NFL.teams = [
      {&quot;abbr&quot;:&quot;ARI&quot;, &quot;team&quot;:&quot;Arizona&quot;,        &quot;mascot&quot;: &quot;Cardinals&quot;,  &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;ATL&quot;, &quot;team&quot;:&quot;Atlanta&quot;,        &quot;mascot&quot;: &quot;Falcons&quot;,    &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;BAL&quot;, &quot;team&quot;:&quot;Baltimore&quot;,      &quot;mascot&quot;: &quot;Ravens&quot;,     &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;BUF&quot;, &quot;team&quot;:&quot;Buffalo&quot;,        &quot;mascot&quot;: &quot;Bills&quot;,      &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;CAR&quot;, &quot;team&quot;:&quot;Carolina&quot;,       &quot;mascot&quot;: &quot;Panthers&quot;,   &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;CHI&quot;, &quot;team&quot;:&quot;Chicago&quot;,        &quot;mascot&quot;: &quot;Bears&quot;,      &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;CIN&quot;, &quot;team&quot;:&quot;Cincinnati&quot;,     &quot;mascot&quot;: &quot;Bengals&quot;,    &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;CLE&quot;, &quot;team&quot;:&quot;Cleveland&quot;,      &quot;mascot&quot;: &quot;Browns&quot;,     &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;DAL&quot;, &quot;team&quot;:&quot;Dallas&quot;,         &quot;mascot&quot;: &quot;Cowboys&quot;,    &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;DEN&quot;, &quot;team&quot;:&quot;Denver&quot;,         &quot;mascot&quot;: &quot;Broncos&quot;,    &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;DET&quot;, &quot;team&quot;:&quot;Detroit&quot;,        &quot;mascot&quot;: &quot;Lions&quot;,      &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;GB&quot;,  &quot;team&quot;:&quot;Green Bay&quot;,      &quot;mascot&quot;: &quot;Packers&quot;,    &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;HOU&quot;, &quot;team&quot;:&quot;Houston&quot;,        &quot;mascot&quot;: &quot;Texans&quot;,     &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;IND&quot;, &quot;team&quot;:&quot;Indianapolis&quot;,   &quot;mascot&quot;: &quot;Colts&quot;,      &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;JAC&quot;, &quot;team&quot;:&quot;Jacksonville&quot;,   &quot;mascot&quot;: &quot;Jaguars&quot;,    &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;KC&quot;,  &quot;team&quot;:&quot;Kansas City&quot;,    &quot;mascot&quot;: &quot;Chiefs&quot;,     &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;MIA&quot;, &quot;team&quot;:&quot;Miami&quot;,          &quot;mascot&quot;: &quot;Dolphins&quot;,   &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;MIN&quot;, &quot;team&quot;:&quot;Minnesota&quot;,      &quot;mascot&quot;: &quot;Vikings&quot;,    &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;NE&quot;,  &quot;team&quot;:&quot;New England&quot;,    &quot;mascot&quot;: &quot;Patriots&quot;,   &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;NO&quot;,  &quot;team&quot;:&quot;New Orleans&quot;,    &quot;mascot&quot;: &quot;Saints&quot;,     &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;NYG&quot;, &quot;team&quot;:&quot;New York&quot;,       &quot;mascot&quot;: &quot;Giants&quot;,     &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;NYJ&quot;, &quot;team&quot;:&quot;New York&quot;,       &quot;mascot&quot;: &quot;Jets&quot;,       &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;OAK&quot;, &quot;team&quot;:&quot;Oakland&quot;,        &quot;mascot&quot;: &quot;Raiders&quot;,    &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;PHI&quot;, &quot;team&quot;:&quot;Philadelphia&quot;,   &quot;mascot&quot;: &quot;Eagles&quot;,     &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;East&quot;},
      {&quot;abbr&quot;:&quot;PIT&quot;, &quot;team&quot;:&quot;Pittsburgh&quot;,     &quot;mascot&quot;: &quot;Steelers&quot;,   &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;North&quot;},
      {&quot;abbr&quot;:&quot;SD&quot;,  &quot;team&quot;:&quot;San Diego&quot;,      &quot;mascot&quot;: &quot;Chargers&quot;,   &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;SEA&quot;, &quot;team&quot;:&quot;Seattle&quot;,        &quot;mascot&quot;: &quot;Seahawks&quot;,   &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;SF&quot;,  &quot;team&quot;:&quot;San Francisco&quot;,  &quot;mascot&quot;: &quot;49ers&quot;,      &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;STL&quot;, &quot;team&quot;:&quot;St. Louis&quot;,      &quot;mascot&quot;: &quot;Rams&quot;,       &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;West&quot;},
      {&quot;abbr&quot;:&quot;TB&quot;,  &quot;team&quot;:&quot;Tampa Bay&quot;,      &quot;mascot&quot;: &quot;Buccaneers&quot;, &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;TEN&quot;, &quot;team&quot;:&quot;Tennessee&quot;,      &quot;mascot&quot;: &quot;Titans&quot;,     &quot;conference&quot;:&quot;AFC&quot;, &quot;division&quot;: &quot;South&quot;},
      {&quot;abbr&quot;:&quot;WAS&quot;, &quot;team&quot;:&quot;Washington&quot;,     &quot;mascot&quot;: &quot;Redskins&quot;,   &quot;conference&quot;:&quot;NFC&quot;, &quot;division&quot;: &quot;East&quot;}
    ];
    NFL.positions = [
      {&quot;abbr&quot;:&quot;QB&quot;,  &quot;pos&quot;:&quot;Quarterback&quot;},
      {&quot;abbr&quot;:&quot;RB&quot;,  &quot;pos&quot;:&quot;Runningback&quot;},
      {&quot;abbr&quot;:&quot;WR&quot;,  &quot;pos&quot;:&quot;Wide Receiver&quot;},
      {&quot;abbr&quot;:&quot;TE&quot;,  &quot;pos&quot;:&quot;Tight End&quot;},
      {&quot;abbr&quot;:&quot;K&quot;,   &quot;pos&quot;:&quot;Kicker&quot;},
      {&quot;abbr&quot;:&quot;D/ST&quot;,&quot;pos&quot;:&quot;Defense/Special Teams&quot;}
    ];
    return NFL;
  });</textarea>

  </div>

</div>

              <div id="item-526c978d0717fc30f0000092" class="item-wrap">


  <div class="content-wrapper">

      <p>Obviously, this returns an object with 'teams' and 'positions' arrays, static data that the application will use often.</p>

  </div>

</div>

              <div id="item-526c978d0717fc30f0000093" class="item-wrap">


  <div class="content-wrapper">

      <h2>Writing the NFL Controller</h2>

  </div>

</div>

              <div id="item-526c978d0717fc30f0000094" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c978d0717fc30f0000094" class="task-box cbox-trigger cbid-526c978d0717fc30f0000094">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Next, create a new controller, nflcontroller.js:<br></p>

  </div>

</div>

              <div id="item-526c978d0717fc30f0000095" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/nflcontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.nfl&#39;, [&#39;fantasyApp.services.nfl&#39;])
  .controller(&#39;NFLController&#39;, [&#39;$scope&#39;,&#39;$routeParams&#39;,&#39;NFL&#39;,
    function($scope, $routeParams, NFL) {
      $scope.nflteams = NFL.teams;
      $scope.nflteam = NFL.teams[$routeParams[&#39;nflTeamId&#39;]];
    }]);</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.nfl&#39;, [&#39;fantasyApp.services.nfl&#39;])
  .controller(&#39;NFLController&#39;, [&#39;$scope&#39;,&#39;$routeParams&#39;,&#39;NFL&#39;,
    function($scope, $routeParams, NFL) {
      $scope.nflteams = NFL.teams;
      $scope.nflteam = NFL.teams[$routeParams[&#39;nflTeamId&#39;]];
    }]);</textarea>

  </div>

</div>

              <div id="item-526c978d0717fc30f0000096" class="item-wrap">


  <div class="content-wrapper">

      <p>This controller will be used to view all the teams, as well as individual teams.</p>

  </div>

</div>

              <div id="item-526c978d0717fc30f0000097" class="item-wrap">


  <div class="content-wrapper">

      <h2>Includes and Dependencies</h2>

  </div>

</div>

              <div id="item-526c978d0717fc30f0000098" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c978d0717fc30f0000098" class="task-box cbox-trigger cbid-526c978d0717fc30f0000098">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>You still need to include these new controller and service files with the rest of the application, so add the paths to app/views/index.html<br></p>

  </div>

</div>

              <div id="item-526c978d0717fc30f0000099" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/index.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:20">
    &lt;script src=&quot;http://static.firebase.com/v0/firebase.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;https://cdn.firebase.com/v0/firebase-simple-login.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;lib/angular/angular.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;lib/angular-bootstrap/ui-bootstrap-tpls.min.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;lib/angular-route/angular-route.min.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;lib/angular-fire/angularFire.js&quot;&gt;&lt;/script&gt;

    &lt;script src=&quot;js/app.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/config.js&quot;&gt;&lt;/script&gt;

    &lt;script src=&quot;js/controllers/headercontroller.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/controllers/signincontroller.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/controllers/signupcontroller.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/controllers/nflcontroller.js&quot;&gt;&lt;/script&gt;

    &lt;script src=&quot;js/services/loginservice.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/services/profilecreator.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/services/nflservice.js&quot;&gt;&lt;/script&gt;</pre>
        <textarea class="codedata" style="display:none">    &lt;script src=&quot;http://static.firebase.com/v0/firebase.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;https://cdn.firebase.com/v0/firebase-simple-login.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;lib/angular/angular.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;lib/angular-bootstrap/ui-bootstrap-tpls.min.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;lib/angular-route/angular-route.min.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;lib/angular-fire/angularFire.js&quot;&gt;&lt;/script&gt;

    &lt;script src=&quot;js/app.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/config.js&quot;&gt;&lt;/script&gt;

    &lt;script src=&quot;js/controllers/headercontroller.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/controllers/signincontroller.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/controllers/signupcontroller.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/controllers/nflcontroller.js&quot;&gt;&lt;/script&gt;

    &lt;script src=&quot;js/services/loginservice.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/services/profilecreator.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;js/services/nflservice.js&quot;&gt;&lt;/script&gt;</textarea>

  </div>

</div>

              <div id="item-526c978d0717fc30f000009a" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c978d0717fc30f000009a" class="task-box cbox-trigger cbid-526c978d0717fc30f000009a">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Since you are also declaring these as modules, you must add them to the module dependencies in app/js/app.js:</p>

  </div>

</div>

              <div id="item-526c98480717fc30f0000138" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/app.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

// Declare app level module which depends on filters, and services
var app = angular.module(&#39;fantasyApp&#39;,
  [ &#39;fantasyApp.config&#39;
  , &#39;fantasyApp.controllers.header&#39;
  , &#39;fantasyApp.controllers.signin&#39;
  , &#39;fantasyApp.controllers.signup&#39;
  , &#39;fantasyApp.controllers.nfl&#39;
  , &#39;firebase&#39;, &#39;ui.bootstrap&#39;, &#39;ngRoute&#39;]
  )</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

// Declare app level module which depends on filters, and services
var app = angular.module(&#39;fantasyApp&#39;,
  [ &#39;fantasyApp.config&#39;
  , &#39;fantasyApp.controllers.header&#39;
  , &#39;fantasyApp.controllers.signin&#39;
  , &#39;fantasyApp.controllers.signup&#39;
  , &#39;fantasyApp.controllers.nfl&#39;
  , &#39;firebase&#39;, &#39;ui.bootstrap&#39;, &#39;ngRoute&#39;]
  )</textarea>

  </div>

</div>

              <div id="item-526c98480717fc30f0000139" class="item-wrap">


  <div class="content-wrapper">

      <h2>Routing</h2>

  </div>

</div>

              <div id="item-526c98480717fc30f000013a" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c98480717fc30f000013a" class="task-box cbox-trigger cbid-526c98480717fc30f000013a">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Now add routes for each of these views. The view templates will be app/views/nfl/list.html and app/views/nfl/view.html:<br></p>

  </div>

</div>

              <div id="item-526c98480717fc30f000013b" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/config.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

// Declare app level module which depends on filters, and services
angular.module(&#39;fantasyApp.config&#39;, [])

app.config([&#39;$routeProvider&#39;, 
    function($routeProvider) {
      $routeProvider
      .when(&#39;/&#39;,                    { templateUrl: &#39;views/default.html&#39; })
      .when(&#39;/signin&#39;,              { templateUrl: &#39;views/users/signin.html&#39; })
      .when(&#39;/signup&#39;,              { templateUrl: &#39;views/users/signup.html&#39; })
      .when(&#39;/nflteams&#39;,            { templateUrl: &#39;views/nfl/list.html&#39;
                                    , authRequired: true })
      .when(&#39;/nflteams/:nflTeamId&#39;, { templateUrl: &#39;views/nfl/view.html&#39;
                                    , authRequired: true })
      .otherwise(                   { redirectTo: &#39;/&#39; });
    }])
  
  // establish authentication
  .run([&#39;angularFireAuth&#39;, &#39;FBURL&#39;, &#39;$rootScope&#39;, 
    function(angularFireAuth, FBURL, $rootScope) {
      angularFireAuth.initialize(new Firebase(FBURL), {scope: $rootScope, name: &#39;auth&#39;, path: &#39;/signin&#39;});
      $rootScope.FBURL = FBURL;
    }])

  // your Firebase URL goes here
  // should look something like: https://blahblah.firebaseio.com
  .constant(&#39;FBURL&#39;, &#39;&lt;&lt;yourfirebasename&gt;&gt;.firebaseio.com&#39;)</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

// Declare app level module which depends on filters, and services
angular.module(&#39;fantasyApp.config&#39;, [])

app.config([&#39;$routeProvider&#39;, 
    function($routeProvider) {
      $routeProvider
      .when(&#39;/&#39;,                    { templateUrl: &#39;views/default.html&#39; })
      .when(&#39;/signin&#39;,              { templateUrl: &#39;views/users/signin.html&#39; })
      .when(&#39;/signup&#39;,              { templateUrl: &#39;views/users/signup.html&#39; })
      .when(&#39;/nflteams&#39;,            { templateUrl: &#39;views/nfl/list.html&#39;
                                    , authRequired: true })
      .when(&#39;/nflteams/:nflTeamId&#39;, { templateUrl: &#39;views/nfl/view.html&#39;
                                    , authRequired: true })
      .otherwise(                   { redirectTo: &#39;/&#39; });
    }])
  
  // establish authentication
  .run([&#39;angularFireAuth&#39;, &#39;FBURL&#39;, &#39;$rootScope&#39;, 
    function(angularFireAuth, FBURL, $rootScope) {
      angularFireAuth.initialize(new Firebase(FBURL), {scope: $rootScope, name: &#39;auth&#39;, path: &#39;/signin&#39;});
      $rootScope.FBURL = FBURL;
    }])

  // your Firebase URL goes here
  // should look something like: https://blahblah.firebaseio.com
  .constant(&#39;FBURL&#39;, &#39;&lt;&lt;yourfirebasename&gt;&gt;.firebaseio.com&#39;)</textarea>

  </div>

</div>

              <div id="item-526c98480717fc30f000013c" class="item-wrap">


  <div class="content-wrapper">

      <p>Notice that :nflTeamId exists for the individual team route, and the string value of this in the URL will be available as $routeParams[‘nflTeamId’] in the controller once $routeParams is injected.</p>

  </div>

</div>

              <div id="item-526c98480717fc30f000013d" class="item-wrap">


  <div class="content-wrapper">

      <p>It’s possible in Angular to define the top-level controller for a view partial in the routing. It’s generally best to avoid this, as it causes you to have to check an additional file to find the controller for a view, as opposed to being able to ascertain it directly from the template. Declaring the controller in the routing seems cleaner, but very infrequently will it benefit you. Just define the controller in your templates.</p>

  </div>

</div>

              <div id="item-526c98480717fc30f000013e" class="item-wrap">


  <div class="content-wrapper">

      <p>In the routes, the authRequired attribute functions exactly as you would expect: if the user has not authenticated via angularFireAuth, or their auth token has expired, they will be unable to access that route, and will instead be redirected to the path which you defined when you initialized angularFireAuth in config.js.</p>

  </div>

</div>

              <div id="item-526c98480717fc30f000013f" class="item-wrap">


  <div class="content-wrapper">

      <h2>Views</h2>

  </div>

</div>

              <div id="item-526c978d0717fc30f000009d" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c978d0717fc30f000009d" class="task-box cbox-trigger cbid-526c978d0717fc30f000009d">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Create a new directory app/views/nfl/, and in it, create a list.html view:<br></p>

  </div>

</div>

              <div id="item-526c98ee0717fca04e0001c0" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/nfl/list.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;div data-ng-controller=&quot;NFLController&quot;&gt;
  &lt;h2&gt;NFL Teams&lt;/h2&gt;
  &lt;div data-ng-repeat=&quot;nflteam in nflteams&quot;&gt;
    &lt;a href=&quot;#/nflteams/{{ $index }}&quot;&gt;{{ nflteam.team }} {{ nflteam.mascot }}&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;div data-ng-controller=&quot;NFLController&quot;&gt;
  &lt;h2&gt;NFL Teams&lt;/h2&gt;
  &lt;div data-ng-repeat=&quot;nflteam in nflteams&quot;&gt;
    &lt;a href=&quot;#/nflteams/{{ $index }}&quot;&gt;{{ nflteam.team }} {{ nflteam.mascot }}&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-526c98ee0717fca04e0001c1" class="item-wrap">


  <div class="content-wrapper">

      <p>Here, you are introduced to the ng-repeat directive for the first time. nflteams is the collection, nflteam is the iterator, and each instance in nflteams will render the ng-repeat HTML, here an &lt;a&gt; tag inside a &lt;div&gt;. $index is simply the 0-based index of iterator, which here is the ID of the NFL team.</p>

  </div>

</div>

              <div id="item-526c98ee0717fca04e0001c2" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c98ee0717fca04e0001c2" class="task-box cbox-trigger cbid-526c98ee0717fca04e0001c2">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Also, create view.html:</p>

  </div>

</div>

              <div id="item-526c98ee0717fca04e0001c3" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/nfl/view.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
  &lt;div data-ng-controller=&quot;NFLController&quot;&gt;
    &lt;h2&gt;{{ nflteam.team }} {{ nflteam.mascot }}&lt;/h2&gt;
    &lt;p&gt;&lt;strong&gt;Abbreviation: &lt;/strong&gt;{{ nflteam.abbr }}&lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;Conference: &lt;/strong&gt;{{ nflteam.conference }}&lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;Division: &lt;/strong&gt;{{ nflteam.division }}&lt;/p&gt;
    &lt;p&gt;&lt;a href=&quot;#/nflteams&quot;&gt;All NFL teams&lt;/a&gt;&lt;/p&gt;
  &lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none">  &lt;div data-ng-controller=&quot;NFLController&quot;&gt;
    &lt;h2&gt;{{ nflteam.team }} {{ nflteam.mascot }}&lt;/h2&gt;
    &lt;p&gt;&lt;strong&gt;Abbreviation: &lt;/strong&gt;{{ nflteam.abbr }}&lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;Conference: &lt;/strong&gt;{{ nflteam.conference }}&lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;Division: &lt;/strong&gt;{{ nflteam.division }}&lt;/p&gt;
    &lt;p&gt;&lt;a href=&quot;#/nflteams&quot;&gt;All NFL teams&lt;/a&gt;&lt;/p&gt;
  &lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-526c98ee0717fca04e0001c4" class="item-wrap">


  <div class="content-wrapper">

      <p>Hopefully nothing surprising here.</p>

  </div>

</div>

              <div id="item-526c98ee0717fca04e0001c5" class="item-wrap">


  <div class="content-wrapper">

      <p>With all of this, you should have your first working pages in your application! Run the server, and navigate to localhost:8000/#/nflteams to try it out.<br></p>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f000214" class="item-wrap">


  <div class="content-wrapper">

      <h2>Building Out The Navbar<br></h2>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f000215" class="item-wrap">


  <div class="content-wrapper">

      <p>You’re going to get sick of typing in routes manually pretty quickly, so let’s add in some links to the various pages.&nbsp;</p>

  </div>

</div>

              <div id="item-526c9a4a0717fc30f000029b" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c9a4a0717fc30f000029b" class="task-box cbox-trigger cbid-526c9a4a0717fc30f000029b">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Add the following in headercontroller.js:<br></p>

  </div>

</div>

              <div id="item-526c99fe0717fc30f00001e6" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/headercontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:15">
      $scope.navbarEntries = [
        {
          &quot;title&quot;: &quot;NFL Teams&quot;,
          &quot;link&quot;: &quot;/nflteams&quot;
        }
      ];</pre>
        <textarea class="codedata" style="display:none">      $scope.navbarEntries = [
        {
          &quot;title&quot;: &quot;NFL Teams&quot;,
          &quot;link&quot;: &quot;/nflteams&quot;
        }
      ];</textarea>

  </div>

</div>

              <div id="item-526c99fe0717fc30f00001e7" class="item-wrap">


  <div class="content-wrapper">

      <p>We will use this array to add in new links to the navbar as we build out the pages.&nbsp;</p>

  </div>

</div>

              <div id="item-526c9a4a0717fc30f000029c" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c9a4a0717fc30f000029c" class="task-box cbox-trigger cbid-526c9a4a0717fc30f000029c">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Next, in views/header.html, add in the &lt;li&gt; repeater on the navbarEntries array:</p>

  </div>

</div>

              <div id="item-526c99fe0717fc30f00001e8" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/header.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;div class=&quot;navbar-inner ng-scope&quot; data-ng-controller=&quot;HeaderController&quot;&gt;
  &lt;ul class=&quot;nav&quot;&gt;
    &lt;li&gt;&lt;a class=&quot;brand&quot; href=&quot;#/&quot;&gt;ngFantasyFootball&lt;/a&gt;&lt;/li&gt;
    &lt;li data-ng-repeat=&quot;entry in navbarEntries&quot; data-ng-show=&quot;auth&quot; &gt;
      &lt;a href=&quot;#{{entry.link}}&quot;&gt;{{entry.title}}&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;div class=&quot;navbar-inner ng-scope&quot; data-ng-controller=&quot;HeaderController&quot;&gt;
  &lt;ul class=&quot;nav&quot;&gt;
    &lt;li&gt;&lt;a class=&quot;brand&quot; href=&quot;#/&quot;&gt;ngFantasyFootball&lt;/a&gt;&lt;/li&gt;
    &lt;li data-ng-repeat=&quot;entry in navbarEntries&quot; data-ng-show=&quot;auth&quot; &gt;
      &lt;a href=&quot;#{{entry.link}}&quot;&gt;{{entry.title}}&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;</textarea>

  </div>

</div>

              <div id="item-526c99fe0717fc30f00001e9" class="item-wrap">


  <div class="content-wrapper">

      <p>With this, we have working navbar buttons, but we’d like to take advantage of the “active” class to show if that section of the application is currently active.&nbsp;</p>

  </div>

</div>

              <div id="item-526c9a4a0717fc30f000029d" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c9a4a0717fc30f000029d" class="task-box cbox-trigger cbid-526c9a4a0717fc30f000029d">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Add an ng-class entry to the &lt;li&gt; repeater in the header:</p>

  </div>

</div>

              <div id="item-526c99fe0717fc30f00001ea" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/header.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:4">
    &lt;li data-ng-repeat=&quot;entry in navbarEntries&quot; data-ng-show=&quot;auth&quot; data-ng-class=&quot;{ active: entry.isActive }&quot;&gt;</pre>
        <textarea class="codedata" style="display:none">    &lt;li data-ng-repeat=&quot;entry in navbarEntries&quot; data-ng-show=&quot;auth&quot; data-ng-class=&quot;{ active: entry.isActive }&quot;&gt;</textarea>

  </div>

</div>

              <div id="item-526c99fe0717fc30f00001eb" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c99fe0717fc30f00001eb" class="task-box cbox-trigger cbid-526c99fe0717fc30f00001eb">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Read up more on the ng-class directive&nbsp;<a href="http://docs.angularjs.org/api/ng.directive:ngClass">here</a></p>

  </div>

</div>

              <div id="item-526c99fe0717fc30f00001ec" class="item-wrap">


  <div class="content-wrapper">

      <p>Here, the “active” class is added when entry.isActive evaluates to true.&nbsp;</p>

  </div>

</div>

              <div id="item-526c9b1d0717fc4a8f000441" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c9b1d0717fc4a8f000441" class="task-box cbox-trigger cbid-526c9b1d0717fc4a8f000441">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Next, you’ll add a listener to the header controller scope to set these array attributes every time the route changes:<br></p>

  </div>

</div>

              <div id="item-526c9b1d0717fc4a8f000442" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/headercontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:15">
      $scope.navbarEntries = [
        {
          &quot;title&quot;: &quot;NFL Teams&quot;,
          &quot;link&quot;: &quot;/nflteams&quot;
        }
      ];

      $scope.$on(&#39;$routeChangeSuccess&#39;, function() {
        $scope.navbarEntries.forEach(
          function(data) {
            data.isActive = ($location.path().indexOf(data.link) == 0);
          }
        )
      })</pre>
        <textarea class="codedata" style="display:none">      $scope.navbarEntries = [
        {
          &quot;title&quot;: &quot;NFL Teams&quot;,
          &quot;link&quot;: &quot;/nflteams&quot;
        }
      ];

      $scope.$on(&#39;$routeChangeSuccess&#39;, function() {
        $scope.navbarEntries.forEach(
          function(data) {
            data.isActive = ($location.path().indexOf(data.link) == 0);
          }
        )
      })</textarea>

  </div>

</div>

              <div id="item-526c9b1d0717fc4a8f000443" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c9b1d0717fc4a8f000443" class="task-box cbox-trigger cbid-526c9b1d0717fc4a8f000443">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Read up more on ngRoute <a href="http://docs.angularjs.org/api/ngRoute.$route">here</a></p>

  </div>

</div>

              <div id="item-526c9b1d0717fc4a8f000444" class="item-wrap">


  <div class="content-wrapper">

      <p>The above snippet will invoke the provided function each time the Angular route is successfully changed. Each time, it will iterate through the navbarEntires entities and set the isActive attribute based on whether or not the route starts with that string.<br></p>

  </div>

</div>

              <div id="item-526c9b1d0717fc4a8f000445" class="item-wrap">


  <div class="content-wrapper">

      <h2>Angular View Anti-Pattern<br></h2>

  </div>

</div>

              <div id="item-526c9b1d0717fc4a8f000446" class="item-wrap">


  <div class="content-wrapper">

      <p>This implementation might seem a bit strange to you, and it should. Why, might you ask, wouldn't you just call a method from the view, which would assess if it should be active or not?<br></p>

  </div>

</div>

              <div id="item-526c9b1d0717fc4a8f000447" class="item-wrap">


  <div class="content-wrapper">

      <p>The reason is the $digest cycle re-evaluation. This cycle occurs very, very often, and every method call you use in your view to assess property will be re-invoked every single cycle, which will obviously degrade performance as the application scales. Using a variable allows angular to avoid this re-evaluation. In this context, the variable only needs to be recalculated every time the route changes, so doing it with the $routeChangeSuccess event allows us to limit the calculation to that single event.<br></p>

  </div>

</div>

              <div id="item-526c99fe0717fc30f00001ed" class="item-wrap">


  <div class="content-wrapper">

      <h1>Playing With Firebase</h1>

  </div>

</div>

              <div id="item-526c9b1d0717fc4a8f000448" class="item-wrap">


  <div class="content-wrapper">

      <p>Now we can start getting serious with Firebase. The first thing you’ll build is the League infrastructure.</p>

  </div>

</div>

              <div id="item-526c9ecc0717fc30f0000357" class="item-wrap">


  <div class="content-wrapper">

      <h2>League Routing</h2>

  </div>

</div>

              <div id="item-526c9ecc0717fc30f0000358" class="item-wrap">


  <div class="content-wrapper">

      <p>Update the routes in config.js to match the following:</p>

  </div>

</div>

              <div id="item-526c9ecc0717fc30f0000359" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/config.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

// Declare app level module which depends on filters, and services
angular.module(&#39;fantasyApp.config&#39;, [])

app.config([&#39;$routeProvider&#39;, 
    function($routeProvider) {
      $routeProvider
      .when(&#39;/&#39;,                        { templateUrl: &#39;views/default.html&#39; })
      .when(&#39;/signin&#39;,                  { templateUrl: &#39;views/users/signin.html&#39; })
      .when(&#39;/signup&#39;,                  { templateUrl: &#39;views/users/signup.html&#39; })
      .when(&#39;/nflteams&#39;,                { templateUrl: &#39;views/nfl/list.html&#39;, authRequired: true })
      .when(&#39;/nflteams/:nflTeamId&#39;,     { templateUrl: &#39;views/nfl/view.html&#39;, authRequired: true })
      .when(&#39;/leagues&#39;,                 { templateUrl: &#39;views/leagues/list.html&#39;, authRequired: true })
      .when(&#39;/leagues/create&#39;,          { templateUrl: &#39;views/leagues/edit.html&#39;, authRequired: true })
      .when(&#39;/leagues/:leagueId&#39;,       { templateUrl: &#39;views/leagues/view.html&#39;, authRequired: true })
      .when(&#39;/leagues/:leagueId/edit&#39;,  { templateUrl: &#39;views/leagues/edit.html&#39;, authRequired: true })
      .otherwise(                       { redirectTo: &#39;/&#39; });
    }])</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

// Declare app level module which depends on filters, and services
angular.module(&#39;fantasyApp.config&#39;, [])

app.config([&#39;$routeProvider&#39;, 
    function($routeProvider) {
      $routeProvider
      .when(&#39;/&#39;,                        { templateUrl: &#39;views/default.html&#39; })
      .when(&#39;/signin&#39;,                  { templateUrl: &#39;views/users/signin.html&#39; })
      .when(&#39;/signup&#39;,                  { templateUrl: &#39;views/users/signup.html&#39; })
      .when(&#39;/nflteams&#39;,                { templateUrl: &#39;views/nfl/list.html&#39;, authRequired: true })
      .when(&#39;/nflteams/:nflTeamId&#39;,     { templateUrl: &#39;views/nfl/view.html&#39;, authRequired: true })
      .when(&#39;/leagues&#39;,                 { templateUrl: &#39;views/leagues/list.html&#39;, authRequired: true })
      .when(&#39;/leagues/create&#39;,          { templateUrl: &#39;views/leagues/edit.html&#39;, authRequired: true })
      .when(&#39;/leagues/:leagueId&#39;,       { templateUrl: &#39;views/leagues/view.html&#39;, authRequired: true })
      .when(&#39;/leagues/:leagueId/edit&#39;,  { templateUrl: &#39;views/leagues/edit.html&#39;, authRequired: true })
      .otherwise(                       { redirectTo: &#39;/&#39; });
    }])</textarea>

  </div>

</div>

              <div id="item-526c9ecc0717fc30f000035a" class="item-wrap">


  <div class="content-wrapper">

      <h2>League Services</h2>

  </div>

</div>

              <div id="item-526c9ecc0717fc30f000035b" class="item-wrap">


  <div class="content-wrapper">

      <p>Next, let’s build out some of the services that we’ll for fantasy league functionality.</p>

  </div>

</div>

              <div id="item-526c9ecc0717fc30f000035c" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c9ecc0717fc30f000035c" class="task-box cbox-trigger cbid-526c9ecc0717fc30f000035c">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Create the FireRef service, firerefservice.js:<br></p>

  </div>

</div>

              <div id="item-526ca0530717fca04e000286" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/services/firerefservice.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.firebaseRefs&#39;, [])
  .factory(&#39;FireRef&#39;, [&#39;FBURL&#39;, &#39;Firebase&#39;,
    function(FBURL, Firebase) {
      return {
        leagues: function() {
          return new Firebase(FBURL+&#39;/leagues&#39;);
        }
      , users: function() {
          return new Firebase(FBURL+&#39;/users&#39;);
        }
      }
    }])</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.firebaseRefs&#39;, [])
  .factory(&#39;FireRef&#39;, [&#39;FBURL&#39;, &#39;Firebase&#39;,
    function(FBURL, Firebase) {
      return {
        leagues: function() {
          return new Firebase(FBURL+&#39;/leagues&#39;);
        }
      , users: function() {
          return new Firebase(FBURL+&#39;/users&#39;);
        }
      }
    }])</textarea>

  </div>

</div>

              <div id="item-526ca0530717fca04e000287" class="item-wrap">


  <div class="content-wrapper">

      <p>Basically, everywhere in the application you inject Firebase and FBURL, it will be to construct references. Since we can chain the .child() method to extend references, this service will be used for all the base references, and therefore we only need to do the injection here, and we can in turn inject this service to wherever we need Firebase refs.</p>

  </div>

</div>

              <div id="item-526ca0530717fca04e000288" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca0530717fca04e000288" class="task-box cbox-trigger cbid-526ca0530717fca04e000288">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Make sure and include firerefservice.js in your index.html file.<br></p>

  </div>

</div>

              <div id="item-526ca0530717fca04e000289" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca0530717fca04e000289" class="task-box cbox-trigger cbid-526ca0530717fca04e000289">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Next, create the Leagues service, leagueservice.js:<br></p>

  </div>

</div>

              <div id="item-526ca0530717fca04e00028a" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/services/leagueservice.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.leagues&#39;, [&#39;fantasyApp.services.firebaseRefs&#39;])
  .factory(&#39;Leagues&#39;, [&#39;angularFireCollection&#39;, &#39;FireRef&#39;,
    function(angularFireCollection, FireRef) {
      return {
        collection: function(cb) {
          return angularFireCollection(FireRef.leagues(),cb);
        }
      , find: function(leagueId) {
          return FireRef.leagues().child(&#39;/&#39;+leagueId);
        }
      , create: function(league, commissioner) {
         return FireRef.leagues().push({
            name: league.name,
            commissionerId: commissioner.id,
            fantasyTeams: []
          }).name();
        }
      , removeLeague: function(leagueId) {
          var league = FireRef.leagues().child(&#39;/&#39;+leagueId)
          league.remove();
        }
      }
    }])</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.leagues&#39;, [&#39;fantasyApp.services.firebaseRefs&#39;])
  .factory(&#39;Leagues&#39;, [&#39;angularFireCollection&#39;, &#39;FireRef&#39;,
    function(angularFireCollection, FireRef) {
      return {
        collection: function(cb) {
          return angularFireCollection(FireRef.leagues(),cb);
        }
      , find: function(leagueId) {
          return FireRef.leagues().child(&#39;/&#39;+leagueId);
        }
      , create: function(league, commissioner) {
         return FireRef.leagues().push({
            name: league.name,
            commissionerId: commissioner.id,
            fantasyTeams: []
          }).name();
        }
      , removeLeague: function(leagueId) {
          var league = FireRef.leagues().child(&#39;/&#39;+leagueId)
          league.remove();
        }
      }
    }])</textarea>

  </div>

</div>

              <div id="item-526ca0530717fca04e00028b" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca0530717fca04e00028b" class="task-box cbox-trigger cbid-526ca0530717fca04e00028b">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Make sure and include leagueservice.js in your index.html file.</p>

  </div>

</div>

              <div id="item-526ca0530717fca04e00028c" class="item-wrap">


  <div class="content-wrapper">

      <p>There’s a lot to dissect here. find() shouldn’t be surprising to you, it simply uses the Firebase reference API to reference a child. You should also be able to intuit what removeLeague() does from what you know about references and from the Firebase API documentation. The next sections will discuss collection() and create().<br></p>

  </div>

</div>

              <div id="item-526ca0530717fca04e00028d" class="item-wrap">


  <div class="content-wrapper">

      <h2>angularFireCollection</h2>

  </div>

</div>

              <div id="item-526ca0530717fca04e00028e" class="item-wrap">


  <div class="content-wrapper">

      <p>When first exposed to angularFireCollection, it seems a bit unwieldy until you properly understand how to use it. angularFireCollection binds the $scope to a collection of attributes, and manages the events that occur within that collection. The attributes are normally of the same type. The $scope attribute that is bound to the collection can be used in the view in the same way as an array, and as elements in the collection are added, removed, and changed, the angularFireCollection will manage the alterations seamlessly.</p>

  </div>

</div>

              <div id="item-526ca0530717fca04e00028f" class="item-wrap">


  <div class="content-wrapper">

      <p>It's worth mentioning here that an angularFireCollection is not something you would or should iterate through in the controller. In the real-time data paradigm, the concept of 'iterating' breaks down when you consider that all data is subject to addition, removal, and alteration at any time. The angularFireCollection's purpose is to cleanly project a real-time collection onto the view.</p>

  </div>

</div>

              <div id="item-526ca0530717fca04e000290" class="item-wrap">


  <div class="content-wrapper">

      <p>In the Leagues service, the collection() method is merely returning the angularFireCollection, which here will exist as a collection of all leagues in the Firebase. We will later assign the returned collection to the scope in the controller.</p>

  </div>

</div>

              <div id="item-526ca0530717fca04e000291" class="item-wrap">


  <div class="content-wrapper">

      <p>The create() method is important to understand. When the push() method is used on a reference, the object passed to it will be inserted at that location. The ‘id’ for that object is automatically generated by Firebase, and will look something like this: -J54kg6u7BKj5FXSEdQ7. From the Firebase documentation: “The unique name generated by push( ) is prefixed with a client-generated timestamp so that the resulting list will be chronologically-sorted.”</p>

  </div>

</div>

              <div id="item-526ca0530717fca04e000292" class="item-wrap">


  <div class="content-wrapper">

      <p>With these methods, we can now create, read, update, and destroy leagues as we please. If you’re paying attention, you might have noticed that nothing above serves to update the league. This is intentional, and will become clear in a moment.</p>

  </div>

</div>

              <div id="item-526ca0530717fca04e000293" class="item-wrap">


  <div class="content-wrapper">

      <h2>League Controller<br></h2>

  </div>

</div>

              <div id="item-526ca0530717fca04e000294" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca0530717fca04e000294" class="task-box cbox-trigger cbid-526ca0530717fca04e000294">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Now, build out leaguescontroller.js:</p>

  </div>

</div>

              <div id="item-526ca0530717fca04e000295" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/leaguescontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.leagues&#39;, [&#39;fantasyApp.services.leagues&#39;])
  .controller(&#39;LeaguesController&#39;, [&#39;$scope&#39;,&#39;$routeParams&#39;, &#39;$location&#39;, &#39;angularFire&#39;, &#39;Leagues&#39;, 
    function($scope, $routeParams, $location, angularFire, Leagues) {

      $scope.league = {};
      $scope.leagueId = $routeParams.leagueId;

      $scope.findLeagues = function() {
        $scope.leagues = Leagues.collection();
      }

      $scope.findOneLeague = function (leagueId) {
        if(!!$scope.leagueId) {
          angularFire(Leagues.find($routeParams.leagueId), $scope, &#39;league&#39;)
        }
      }

      $scope.createLeague = function() {
        var leagueId = Leagues.create($scope.league, $scope.auth);
        $scope.league = null;
        $location.path(&#39;/leagues/&#39;+leagueId);
      }

      $scope.removeLeague = function(leagueId) {
        Leagues.removeLeague(leagueId);
      }
    }])</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.leagues&#39;, [&#39;fantasyApp.services.leagues&#39;])
  .controller(&#39;LeaguesController&#39;, [&#39;$scope&#39;,&#39;$routeParams&#39;, &#39;$location&#39;, &#39;angularFire&#39;, &#39;Leagues&#39;, 
    function($scope, $routeParams, $location, angularFire, Leagues) {

      $scope.league = {};
      $scope.leagueId = $routeParams.leagueId;

      $scope.findLeagues = function() {
        $scope.leagues = Leagues.collection();
      }

      $scope.findOneLeague = function (leagueId) {
        if(!!$scope.leagueId) {
          angularFire(Leagues.find($routeParams.leagueId), $scope, &#39;league&#39;)
        }
      }

      $scope.createLeague = function() {
        var leagueId = Leagues.create($scope.league, $scope.auth);
        $scope.league = null;
        $location.path(&#39;/leagues/&#39;+leagueId);
      }

      $scope.removeLeague = function(leagueId) {
        Leagues.removeLeague(leagueId);
      }
    }])</textarea>

  </div>

</div>

              <div id="item-526ca0530717fca04e000296" class="item-wrap">


  <div class="content-wrapper">

      <p>If you understood the service we just wrote, then everything here should be no surprise. findLeagues() attaches the angularFireCollection for the /leagues ref to $scope.leagues. findOneLeague() binds the league data for the leagueId specified in the route. For createLeague(), recall that the create() method on the Leagues service returns the unique ID that Firebase allocated for the data. This passes the league data from the form (which we have yet to create) to Firebase for a write, and it will redirect to the route of the league that was just created. removeLeague() simply invokes the service method of the same name.</p>

  </div>

</div>

              <div id="item-526ca0530717fca04e000297" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca0530717fca04e000297" class="task-box cbox-trigger cbid-526ca0530717fca04e000297">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Remember to include the leagues controller file in index.html, as well as add the module as a dependency in app.js.</p>

  </div>

</div>

              <div id="item-526ca0530717fca04e000298" class="item-wrap">


  <div class="content-wrapper">

      <h2>League Views</h2>

  </div>

</div>

              <div id="item-526ca1d70717fc30f000042f" class="item-wrap">


  <div class="content-wrapper">

      <p>Next, we’re going to create edit.html, list.html, and view.html.&nbsp;</p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f0000430" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca1d70717fc30f0000430" class="task-box cbox-trigger cbid-526ca1d70717fc30f0000430">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Create a new directory, app/views/leagues/, for the new views</p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f0000431" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca1d70717fc30f0000431" class="task-box cbox-trigger cbid-526ca1d70717fc30f0000431">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>view.html:<br></p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f0000432" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/leagues/view.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
  &lt;div data-ng-controller=&quot;LeaguesController&quot; data-ng-init=&quot;findOneLeague()&quot;&gt;
    &lt;h2&gt;{{ league.name }}&lt;/h2&gt;
    &lt;p&gt;&lt;strong&gt;Commissioner: &lt;/strong&gt;{{ league.commissionerId }}&lt;/p&gt;
    &lt;br&gt;
    &lt;a href=&quot;#/leagues&quot;&gt;View all leagues&lt;/a&gt;
  &lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none">  &lt;div data-ng-controller=&quot;LeaguesController&quot; data-ng-init=&quot;findOneLeague()&quot;&gt;
    &lt;h2&gt;{{ league.name }}&lt;/h2&gt;
    &lt;p&gt;&lt;strong&gt;Commissioner: &lt;/strong&gt;{{ league.commissionerId }}&lt;/p&gt;
    &lt;br&gt;
    &lt;a href=&quot;#/leagues&quot;&gt;View all leagues&lt;/a&gt;
  &lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-526ca1d70717fc30f0000433" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca1d70717fc30f0000433" class="task-box cbox-trigger cbid-526ca1d70717fc30f0000433">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>list.html</p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f0000434" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/leagues/list.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
 &lt;div data-ng-controller=&quot;LeaguesController&quot; data-ng-init=&quot;findLeagues()&quot;&gt;
  &lt;h2&gt;Leagues&lt;/h2&gt;
  &lt;h3&gt;All Leagues&lt;/h3&gt;
  &lt;ul class=&quot;unstyled&quot;&gt;
    &lt;li data-ng-repeat=&quot;league in leagues&quot;&gt;
      &lt;a href=&quot;#/leagues/{{ league.$id }}&quot;&gt;{{league.name}}&lt;/a&gt;
      (&lt;a href=&quot;#/leagues/{{ league.$id }}/edit&quot;&gt;Edit&lt;/a&gt;)
      (&lt;a href=&quot;&quot; data-ng-click=&quot;removeLeague(&#39;{{ league.$id }}&#39;)&quot; &gt;Remove&lt;/a&gt;)
    &lt;/li&gt;
  &lt;/ul&gt; 
  &lt;br&gt;
  &lt;a href=&quot;#/leagues/create&quot;&gt;Create a new league&lt;/a&gt;
&lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none"> &lt;div data-ng-controller=&quot;LeaguesController&quot; data-ng-init=&quot;findLeagues()&quot;&gt;
  &lt;h2&gt;Leagues&lt;/h2&gt;
  &lt;h3&gt;All Leagues&lt;/h3&gt;
  &lt;ul class=&quot;unstyled&quot;&gt;
    &lt;li data-ng-repeat=&quot;league in leagues&quot;&gt;
      &lt;a href=&quot;#/leagues/{{ league.$id }}&quot;&gt;{{league.name}}&lt;/a&gt;
      (&lt;a href=&quot;#/leagues/{{ league.$id }}/edit&quot;&gt;Edit&lt;/a&gt;)
      (&lt;a href=&quot;&quot; data-ng-click=&quot;removeLeague(&#39;{{ league.$id }}&#39;)&quot; &gt;Remove&lt;/a&gt;)
    &lt;/li&gt;
  &lt;/ul&gt; 
  &lt;br&gt;
  &lt;a href=&quot;#/leagues/create&quot;&gt;Create a new league&lt;/a&gt;
&lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-526ca1d70717fc30f0000435" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca1d70717fc30f0000435" class="task-box cbox-trigger cbid-526ca1d70717fc30f0000435">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>edit.html:</p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f0000436" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/leagues/edit.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;div data-ng-controller=&quot;LeaguesController&quot; data-ng-init=&quot;findOneLeague()&quot;&gt;
  &lt;form class=&quot;form-horizontal&quot;&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;label class=&quot;control-label&quot; for=&quot;name&quot;&gt;Name&lt;/label&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;input type=&quot;text&quot; data-ng-model=&quot;league.name&quot; id=&quot;name&quot; placeholder=&quot;Name&quot;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;button data-ng-click=&quot;createLeague()&quot; data-ng-show=&quot;!leagueId&quot;&gt;Create League&lt;/button&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;a href=&quot;#/leagues&quot;&gt;View all leagues&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/form&gt;
&lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;div data-ng-controller=&quot;LeaguesController&quot; data-ng-init=&quot;findOneLeague()&quot;&gt;
  &lt;form class=&quot;form-horizontal&quot;&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;label class=&quot;control-label&quot; for=&quot;name&quot;&gt;Name&lt;/label&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;input type=&quot;text&quot; data-ng-model=&quot;league.name&quot; id=&quot;name&quot; placeholder=&quot;Name&quot;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;button data-ng-click=&quot;createLeague()&quot; data-ng-show=&quot;!leagueId&quot;&gt;Create League&lt;/button&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;a href=&quot;#/leagues&quot;&gt;View all leagues&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/form&gt;
&lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-526ca1d70717fc30f0000437" class="item-wrap">


  <div class="content-wrapper">

      <p>In each view, the ng-init directive invokes the method listed there before the view renders. These view are relatively trivial, and most of what they contain should be unsurprising to you. Notice that the ng-show conditional on the ‘Create League’ button lets us reuse the edit view for creating and editing.</p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f0000438" class="item-wrap">


  <div class="content-wrapper">

      <h2>Feelin’ Fine About Firebase<br></h2>

  </div>

</div>

              <div id="item-526ca1d70717fc30f0000439" class="item-wrap">


  <div class="content-wrapper">

      <p>With these views, you have all the pieces now to go and create leagues in Firebase. By now, hopefully you’ve realized why an update view isn’t necessary. The answer, of course, is that there is no ‘update’ action that we have to write. When you go to edit a league, you are looking at the real time data in the Firebase. If you watch the Firebase Forge, you’ll be able to see the data be updated there as you change it in the browser. Similarly, if you create a second user account and have it observe the list view, the new user will be able to see the list of leagues update in real time, both with additional entries and editing.&nbsp;</p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f000043a" class="item-wrap">


  <div class="content-wrapper">

      <p>This is the power of Firebase!</p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f000043b" class="item-wrap">


  <div class="content-wrapper">

      <h2>But Wait, There’s More: The Firebase Security API<br></h2>

  </div>

</div>

              <div id="item-526ca1d70717fc30f000043c" class="item-wrap">


  <div class="content-wrapper">

      <p>We are able to define custom security rules for our data by using the Firebase Forge.&nbsp;</p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f000043d" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca1d70717fc30f000043d" class="task-box cbox-trigger cbid-526ca1d70717fc30f000043d">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>First, go through <a href="https://www.firebase.com/docs/security/security-rules.html">this Firebase blog post</a> for a good introduction to Firebase security</p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f000043e" class="item-wrap">


  <div class="content-wrapper">

      <p>You’re probably starting to get an idea of why the Firebase Security API is so powerful. To gain a better understanding, let’s figure out the rules required to enforce the following conditions:&nbsp;</p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f000043f" class="item-wrap">


  <div class="content-wrapper">

      <p><b>We want the users to be logged in when they read all data, and create and edit a league; we want the league to only be editable by the person who created it (the commissioner), we want to prevent users spoofing other users onto leagues, and we want to ensure that the league has a name and commissioner.</b></p>

  </div>

</div>

              <div id="item-526ca1d70717fc30f0000440" class="item-wrap">


  <div class="content-wrapper">

      <p>The Firebase security rules correspond to how our data is structured in the Firebase. Firebase gives us access to certain values in the rules. ‘auth’ is the authenticated user, ‘data’ is a data snapshot of the current data object at that position, and ‘newData’ is a data snapshot of the new data object being written to that position. Additionally, we are able to use three different types of rules: .read, .write, and .validate. With these, we are able to define robust data security and validation rules for our application, and they can be edited on the fly in the Firebase Forge editor.&nbsp;</p>

  </div>

</div>

              <div id="item-526c8aae0717fcb66f000216" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526c8aae0717fcb66f000216" class="task-box cbox-trigger cbid-526c8aae0717fcb66f000216">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Make sure you have read through <a href="https://www.firebase.com/docs/security/security-rules.html">the rules documentation</a><br></p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f000534" class="item-wrap">


  <div class="content-wrapper">

      <p>The following is the set of rules that will properly implement the above conditions:</p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f000535" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">Firebase Rules</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
{
  &quot;rules&quot;: {
    &quot;.read&quot;: &quot;auth != null&quot;,
    &quot;users&quot;: {
      &quot;.write&quot;: &quot;auth != null&quot;
    },
    // OH SNAP A COMMENT
    &quot;leagues&quot;: {
      &quot;$league&quot;: {
        &quot;.write&quot;: &quot;auth != null &amp;&amp; (data.child(&#39;commissionerId&#39;).val() == auth.id || data.child(&#39;commissionerId&#39;).val() == null)&quot;,
        &quot;.validate&quot;: &quot;newData.hasChildren([&#39;commissionerId&#39;,&#39;name&#39;])&quot;,
        &quot;commissionerId&quot;: {
          &quot;.validate&quot;: &quot;auth.id == newData.val()&quot;
        },
        &quot;name&quot;: {
          &quot;.validate&quot;: &quot;newData.val() != &#39;&#39;&quot;
        }
      }
    }
  }
}</pre>
        <textarea class="codedata" style="display:none">{
  &quot;rules&quot;: {
    &quot;.read&quot;: &quot;auth != null&quot;,
    &quot;users&quot;: {
      &quot;.write&quot;: &quot;auth != null&quot;
    },
    // OH SNAP A COMMENT
    &quot;leagues&quot;: {
      &quot;$league&quot;: {
        &quot;.write&quot;: &quot;auth != null &amp;&amp; (data.child(&#39;commissionerId&#39;).val() == auth.id || data.child(&#39;commissionerId&#39;).val() == null)&quot;,
        &quot;.validate&quot;: &quot;newData.hasChildren([&#39;commissionerId&#39;,&#39;name&#39;])&quot;,
        &quot;commissionerId&quot;: {
          &quot;.validate&quot;: &quot;auth.id == newData.val()&quot;
        },
        &quot;name&quot;: {
          &quot;.validate&quot;: &quot;newData.val() != &#39;&#39;&quot;
        }
      }
    }
  }
}</textarea>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f000536" class="item-wrap">


  <div class="content-wrapper">

      <p>It’s worth mentioning here that, if you are editing the security rules in the Firebase Forge editor (which I definitely recommend), you must hit ‘Save Rules’ for them to be applied.</p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f000537" class="item-wrap">


  <div class="content-wrapper">

      <h3>Rules, Rules, Rules</h3>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f000538" class="item-wrap">


  <div class="content-wrapper">

      <p>We’re granting read access to everything in the Firebase if the user has authenticated, accomplished with the simple rule expression “auth != null”. For “users”, we simply prevent writing user data unless the user is logged in. Obviously this is not sufficient to totally protect users, but since we haven’t yet built out an interface to change user data, this will suffice for now.</p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f000539" class="item-wrap">


  <div class="content-wrapper">

      <p>With “leagues”, it starts to get interesting. The Firebase Security API allows for a catch-all security filter by prefacing the attribute name with a $ (what follows the '$' doesn't matter). This will apply the nested rules to all data in that location that is not specifically defined otherwise. Here, we grant write access to all leagues if 1) the user is authenticated, and 2) if the existing data is owned by the current user, OR there is no existing data yet.&nbsp;</p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f00053a" class="item-wrap">


  <div class="content-wrapper">

      <p>The Firebase Security API documentation puts the difference between write access and validation perfectly: “For a write to be allowed, only one .write rule needs to evaluate to true, but all .validate rules for the new data being written must pass.”</p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f00053b" class="item-wrap">


  <div class="content-wrapper">

      <h3>Cutting To The Chase</h3>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f00053c" class="item-wrap">


  <div class="content-wrapper">

      <p>With this, we can dissect the league object and specify each piece exactly how we want it. For the whole league object, we use the hasChildren() validator to check that all fields exist. Then, for each individual piece “commissionerId” and “name”, we can specify individual rules. “commissionerId” must match the current authenticated user id, and “name” must not be an empty string.</p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f00053d" class="item-wrap">


  <div class="content-wrapper">

      <p>One final thing worth mentioning that is awesome about the Firebase Security API is that, since it is a pseudo-JSON format, you can have comments, as demonstrated above. As you can imagine, this is terribly useful when authoring complex security rules.</p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f00053e" class="item-wrap">


  <div class="content-wrapper">

      <p>With this, we have built an effective layer of data security for the application. You can test these security rules by either playing with the application in the client, or by using the Firebase Forge simulator.</p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f00053f" class="item-wrap">


  <div class="content-wrapper">

      <h2>Tying Up a Few Loose Ends<br></h2>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f000540" class="item-wrap">


  <div class="content-wrapper">

      <p>If you played around with the application, you might have noticed that when a validation fails, the way we have written the application does not handle this gracefully. We need to modify a few things:<br></p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f000541" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca31d0717fc4a8f000541" class="task-box cbox-trigger cbid-526ca31d0717fc4a8f000541">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Change the Leagues service to accept a callback:</p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f000542" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/services/leagueservice.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:14">
      , create: function(league, commissioner, cb) {
         return FireRef.leagues().push({
            name: league.name,
            commissionerId: commissioner.id,
            fantasyTeams: []
          }, cb).name();
        }</pre>
        <textarea class="codedata" style="display:none">      , create: function(league, commissioner, cb) {
         return FireRef.leagues().push({
            name: league.name,
            commissionerId: commissioner.id,
            fantasyTeams: []
          }, cb).name();
        }</textarea>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f000543" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca31d0717fc4a8f000543" class="task-box cbox-trigger cbid-526ca31d0717fc4a8f000543">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Change the Leagues controller to pass a callback to the service call:</p>

  </div>

</div>

              <div id="item-5279a6e275793c8bed0002d3" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/leaguescontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:19">
      $scope.createLeague = function() {
        var leagueId = Leagues.create($scope.league, $scope.auth, function(err) {
          if (!err) {
            $scope.league = null;
            $location.path(&#39;/leagues/&#39;+leagueId);
            $scope.$apply();
          }
        });
      }</pre>
        <textarea class="codedata" style="display:none">      $scope.createLeague = function() {
        var leagueId = Leagues.create($scope.league, $scope.auth, function(err) {
          if (!err) {
            $scope.league = null;
            $location.path(&#39;/leagues/&#39;+leagueId);
            $scope.$apply();
          }
        });
      }</textarea>

  </div>

</div>

              <div id="item-5279a6e275793c8bed0002d4" class="item-wrap">


  <div class="content-wrapper">

      <p>Simply, this is now handling the Firebase write properly: as an asynchronous event with a callback. When Firebase does not return an error, it will clear the scope league variable and redirect. The $location.path() redirect will not occur on a library callback, so we need to use $scope.$apply() to ensure this happens.<br></p>

  </div>

</div>

              <div id="item-526ca31d0717fc4a8f000546" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca31d0717fc4a8f000546" class="task-box cbox-trigger cbid-526ca31d0717fc4a8f000546">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Finally, let’s add Leagues to our header, since we how have that completely working:<br></p>

  </div>

</div>

              <div id="item-526ca3af0717fc4a8f00063d" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/headercontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:15">
      $scope.navbarEntries = [
        {
          &quot;title&quot;: &quot;NFL Teams&quot;,
          &quot;link&quot;: &quot;/nflteams&quot;
        }
      , {
          &quot;title&quot;: &quot;Leagues&quot;,
          &quot;link&quot;: &quot;/leagues&quot;
        }
      ];</pre>
        <textarea class="codedata" style="display:none">      $scope.navbarEntries = [
        {
          &quot;title&quot;: &quot;NFL Teams&quot;,
          &quot;link&quot;: &quot;/nflteams&quot;
        }
      , {
          &quot;title&quot;: &quot;Leagues&quot;,
          &quot;link&quot;: &quot;/leagues&quot;
        }
      ];</textarea>

  </div>

</div>

              <div id="item-526ca3af0717fc4a8f00063e" class="item-wrap">


  <div class="content-wrapper">

      <p>Awesome! You now have completely functioning functionality for Fantasy leagues, complete with security, authentication, and best of all, no backend!</p>

  </div>

</div>

              <div id="item-526e1b99d90f9923df00013a" class="item-wrap">


  <div class="content-wrapper">

      <h1>Building the Player Picker</h1>

  </div>

</div>

              <div id="item-526e1b99d90f9923df00013b" class="item-wrap">


  <div class="content-wrapper">

      <h2>Don't Hate the Player, Hate the Game</h2>

  </div>

</div>

              <div id="item-526e1b99d90f9923df00013c" class="item-wrap">


  <div class="content-wrapper">

      <p>Fantasy football is nothing without players, so let’s build this out next. Included in the repository in the scripts/ directory is playerimport.html. Our application is nothing without players, so let’s import some:<br></p>

  </div>

</div>

              <div id="item-526e1b99d90f9923df00013d" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1b99d90f9923df00013d" class="task-box cbox-trigger cbid-526e1b99d90f9923df00013d">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>First, add a security rule that allows writing to players:<br></p>

  </div>

</div>

              <div id="item-526e1b99d90f9923df00013e" class="item-wrap">


  <div class="content-wrapper">

        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
{
  &quot;rules&quot;: {
    &quot;.read&quot;: &quot;auth != null&quot;,
    &quot;users&quot;: {
      &quot;.write&quot;: &quot;auth != null&quot;
    },
    &quot;players&quot;: {
      &quot;.write&quot;: true
    },</pre>
        <textarea class="codedata" style="display:none">{
  &quot;rules&quot;: {
    &quot;.read&quot;: &quot;auth != null&quot;,
    &quot;users&quot;: {
      &quot;.write&quot;: &quot;auth != null&quot;
    },
    &quot;players&quot;: {
      &quot;.write&quot;: true
    },</textarea>

  </div>

</div>

              <div id="item-526e1b99d90f9923df00013f" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1b99d90f9923df00013f" class="task-box cbox-trigger cbid-526e1b99d90f9923df00013f">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Open playerimport.html in your browser, enter your Firebase name, and click the import button to add the sample list of players to your Firebase under the /players location.</p>

  </div>

</div>

              <div id="item-526e1b99d90f9923df000140" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1b99d90f9923df000140" class="task-box cbox-trigger cbid-526e1b99d90f9923df000140">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Once you make sure the player data made it into your Firebase, you should disable writing to players, since we won’t be updating this data:<br></p>

  </div>

</div>

              <div id="item-526e1b99d90f9923df000141" class="item-wrap">


  <div class="content-wrapper">

        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
{
  &quot;rules&quot;: {
    &quot;.read&quot;: &quot;auth != null&quot;,
    &quot;users&quot;: {
      &quot;.write&quot;: &quot;auth != null&quot;
    },
    &quot;players&quot;: {
      &quot;.write&quot;: false
    },</pre>
        <textarea class="codedata" style="display:none">{
  &quot;rules&quot;: {
    &quot;.read&quot;: &quot;auth != null&quot;,
    &quot;users&quot;: {
      &quot;.write&quot;: &quot;auth != null&quot;
    },
    &quot;players&quot;: {
      &quot;.write&quot;: false
    },</textarea>

  </div>

</div>

              <div id="item-526e1b99d90f9923df000142" class="item-wrap">


  <div class="content-wrapper">

      <p>Now let’s start cranking out some player infrastructure.&nbsp;</p>

  </div>

</div>

              <div id="item-526e1fced90f9923df000277" class="item-wrap">


  <div class="content-wrapper">

      <h2>Player Service</h2>

  </div>

</div>

              <div id="item-526e1b99d90f9923df000143" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1b99d90f9923df000143" class="task-box cbox-trigger cbid-526e1b99d90f9923df000143">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Add the players reference to the FireRef service:</p>

  </div>

</div>

              <div id="item-526e1c84d90f99661f00013e" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/scripts/firerefservice.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.firebaseRefs&#39;, [])
  .factory(&#39;FireRef&#39;, [&#39;FBURL&#39;, &#39;Firebase&#39;,
    function(FBURL, Firebase) {
      return {
        leagues: function() {
          return new Firebase(FBURL+&#39;/leagues&#39;);
        }
      , users: function() {
          return new Firebase(FBURL+&#39;/users&#39;);
        }
      , players: function() {
          return new Firebase(FBURL+&#39;/players&#39;);
        }
      }
    }])</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.firebaseRefs&#39;, [])
  .factory(&#39;FireRef&#39;, [&#39;FBURL&#39;, &#39;Firebase&#39;,
    function(FBURL, Firebase) {
      return {
        leagues: function() {
          return new Firebase(FBURL+&#39;/leagues&#39;);
        }
      , users: function() {
          return new Firebase(FBURL+&#39;/users&#39;);
        }
      , players: function() {
          return new Firebase(FBURL+&#39;/players&#39;);
        }
      }
    }])</textarea>

  </div>

</div>

              <div id="item-526e1c84d90f99661f00013f" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1c84d90f99661f00013f" class="task-box cbox-trigger cbid-526e1c84d90f99661f00013f">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Next, create the Player service:</p>

  </div>

</div>

              <div id="item-526e1c84d90f99661f000140" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/services/playerservice.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.players&#39;, [&#39;fantasyApp.services.firebaseRefs&#39;])
  .factory(&#39;Players&#39;, [&#39;FBURL&#39;, &#39;Firebase&#39;, &#39;angularFireCollection&#39;, &#39;FireRef&#39;,
    function(FBURL, Firebase, angularFireCollection, FireRef) {
      return {
        collection: function() {
          return angularFireCollection(FireRef.players());
        }
      , find: function(playerId) {
          return FireRef.players().child(playerId);
        }
      }
    }])</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.players&#39;, [&#39;fantasyApp.services.firebaseRefs&#39;])
  .factory(&#39;Players&#39;, [&#39;FBURL&#39;, &#39;Firebase&#39;, &#39;angularFireCollection&#39;, &#39;FireRef&#39;,
    function(FBURL, Firebase, angularFireCollection, FireRef) {
      return {
        collection: function() {
          return angularFireCollection(FireRef.players());
        }
      , find: function(playerId) {
          return FireRef.players().child(playerId);
        }
      }
    }])</textarea>

  </div>

</div>

              <div id="item-526e1c84d90f99661f000141" class="item-wrap">


  <div class="content-wrapper">

      <p>There’s nothing here you haven’t seen before, we’re simply exposing the angularFireCollection of all players, and the reference to a single player.</p>

  </div>

</div>

              <div id="item-526e1c84d90f99661f000142" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1c84d90f99661f000142" class="task-box cbox-trigger cbid-526e1c84d90f99661f000142">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Add the Player service to index.html<br></p>

  </div>

</div>

              <div id="item-526e1fced90f9923df000278" class="item-wrap">


  <div class="content-wrapper">

      <h2>Player Controller</h2>

  </div>

</div>

              <div id="item-526e1c84d90f99661f000143" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1c84d90f99661f000143" class="task-box cbox-trigger cbid-526e1c84d90f99661f000143">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Next, create the Player controller:<br></p>

  </div>

</div>

              <div id="item-526e1c84d90f99661f000144" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/playerscontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.players&#39;, [&#39;fantasyApp.services.players&#39;])
  .controller(&#39;PlayersController&#39;, [&#39;$scope&#39;,&#39;$routeParams&#39;, &#39;angularFire&#39;, &#39;NFL&#39;, &#39;Players&#39;,
    function ($scope, $routeParams, angularFire, NFL, Players) {

      $scope.positions = NFL.positions;
      $scope.nflteams = NFL.teams;
      $scope.searchsize = {
        &quot;limit&quot;: 10
      }
      $scope.strictsearch = {};

      $scope.findPlayers = function() {
        $scope.players = Players.collection();
      }

      $scope.findOnePlayer = function() {
        angularFire(Players.find($routeParams.playerId), $scope, &#39;player&#39;);
      }
    }]);</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.players&#39;, [&#39;fantasyApp.services.players&#39;])
  .controller(&#39;PlayersController&#39;, [&#39;$scope&#39;,&#39;$routeParams&#39;, &#39;angularFire&#39;, &#39;NFL&#39;, &#39;Players&#39;,
    function ($scope, $routeParams, angularFire, NFL, Players) {

      $scope.positions = NFL.positions;
      $scope.nflteams = NFL.teams;
      $scope.searchsize = {
        &quot;limit&quot;: 10
      }
      $scope.strictsearch = {};

      $scope.findPlayers = function() {
        $scope.players = Players.collection();
      }

      $scope.findOnePlayer = function() {
        angularFire(Players.find($routeParams.playerId), $scope, &#39;player&#39;);
      }
    }]);</textarea>

  </div>

</div>

              <div id="item-526e1c84d90f99661f000145" class="item-wrap">


  <div class="content-wrapper">

      <p>Again, this is more or less identical to the Leagues controller, save for that we are initializing some data that we are going to use in a bit.</p>

  </div>

</div>

              <div id="item-526e1c84d90f99661f000146" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1c84d90f99661f000146" class="task-box cbox-trigger cbid-526e1c84d90f99661f000146">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Add the Players controller to index.html, and list it as a dependency in app.js<br></p>

  </div>

</div>

              <div id="item-526e1fced90f9923df000279" class="item-wrap">


  <div class="content-wrapper">

      <h2>Player Routes and Views</h2>

  </div>

</div>

              <div id="item-526e1c84d90f99661f000147" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1c84d90f99661f000147" class="task-box cbox-trigger cbid-526e1c84d90f99661f000147">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Next, add the routes that we’re going to use:<br></p>

  </div>

</div>

              <div id="item-526e1c84d90f99661f000148" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/config.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:18">
      .when(&#39;/players&#39;,                 { templateUrl: &#39;views/players/list.html&#39;, authRequired: true })
      .when(&#39;/players/:playerId&#39;,       { templateUrl: &#39;views/players/view.html&#39;, authRequired: true })</pre>
        <textarea class="codedata" style="display:none">      .when(&#39;/players&#39;,                 { templateUrl: &#39;views/players/list.html&#39;, authRequired: true })
      .when(&#39;/players/:playerId&#39;,       { templateUrl: &#39;views/players/view.html&#39;, authRequired: true })</textarea>

  </div>

</div>

              <div id="item-526e1c84d90f99661f000149" class="item-wrap">


  <div class="content-wrapper">

      <p>Next, create the two views listed in the routes in a new players/ directory:</p>

  </div>

</div>

              <div id="item-526e1c84d90f99661f00014a" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1c84d90f99661f00014a" class="task-box cbox-trigger cbid-526e1c84d90f99661f00014a">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>view.html:</p>

  </div>

</div>

              <div id="item-526e1c84d90f99661f00014b" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/players/view.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;div data-ng-controller=&quot;PlayersController&quot; data-ng-init=&quot;findOnePlayer()&quot;&gt;
  &lt;h2&gt;&lt;span data-ng-show=&quot;player.num&quot;&gt;#{{ player.num }}&lt;/span&gt; {{ player.name }}&lt;/h2&gt;
  &lt;p&gt;&lt;strong&gt;Team: &lt;/strong&gt;{{ nflteams[player.team].team }} {{ nflteams[player.team].mascot }}&lt;/p&gt;
  &lt;p&gt;&lt;strong&gt;Position: &lt;/strong&gt;{{ positions[player.pos].pos }}&lt;/p&gt;
&lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;div data-ng-controller=&quot;PlayersController&quot; data-ng-init=&quot;findOnePlayer()&quot;&gt;
  &lt;h2&gt;&lt;span data-ng-show=&quot;player.num&quot;&gt;#{{ player.num }}&lt;/span&gt; {{ player.name }}&lt;/h2&gt;
  &lt;p&gt;&lt;strong&gt;Team: &lt;/strong&gt;{{ nflteams[player.team].team }} {{ nflteams[player.team].mascot }}&lt;/p&gt;
  &lt;p&gt;&lt;strong&gt;Position: &lt;/strong&gt;{{ positions[player.pos].pos }}&lt;/p&gt;
&lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-526e1c84d90f99661f00014c" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1c84d90f99661f00014c" class="task-box cbox-trigger cbid-526e1c84d90f99661f00014c">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>list.html:</p>

  </div>

</div>

              <div id="item-526e1d66d90f99206600014e" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/players/list.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;div data-ng-controller=&quot;PlayersController&quot; data-ng-init=&quot;findPlayers()&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;th&gt;Player&lt;/th&gt;
      &lt;th&gt;Position&lt;/th&gt;
      &lt;th&gt;Team&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr data-ng-repeat=&quot;player in players&quot;&gt;
      &lt;td&gt;{{ player.name }}&lt;span data-ng-show=&quot;player.num&quot;&gt; - #{{ player.num }}&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;{{ positions[player.pos].abbr }}&lt;/td&gt;
      &lt;td&gt;{{ nflteams[player.team].abbr }}&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;div data-ng-controller=&quot;PlayersController&quot; data-ng-init=&quot;findPlayers()&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;th&gt;Player&lt;/th&gt;
      &lt;th&gt;Position&lt;/th&gt;
      &lt;th&gt;Team&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr data-ng-repeat=&quot;player in players&quot;&gt;
      &lt;td&gt;{{ player.name }}&lt;span data-ng-show=&quot;player.num&quot;&gt; - #{{ player.num }}&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;{{ positions[player.pos].abbr }}&lt;/td&gt;
      &lt;td&gt;{{ nflteams[player.team].abbr }}&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-526e1d66d90f99206600014f" class="item-wrap">


  <div class="content-wrapper">

      <p>These views should be unsurprising to you. If you’ve properly implemented all the steps, you should see the player data, positions, and teams for all players in your Firebase.</p>

  </div>

</div>

              <div id="item-526e1fced90f9923df00027a" class="item-wrap">


  <div class="content-wrapper">

      <h2>Constructing the Player Filter</h2>

  </div>

</div>

              <div id="item-526e1d66d90f992066000150" class="item-wrap">


  <div class="content-wrapper">

      <p>You surely don’t want to see all the hundreds of players at once, so let’s build a filtering mechanism into the player picker.&nbsp;<br></p>

  </div>

</div>

              <div id="item-526e1d66d90f992066000151" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1d66d90f992066000151" class="task-box cbox-trigger cbid-526e1d66d90f992066000151">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Change your list.html to match the following, adding in three ng-includes and the player filter:<br></p>

  </div>

</div>

              <div id="item-526e1d66d90f992066000152" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/players/list.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;div data-ng-controller=&quot;PlayersController&quot; data-ng-init=&quot;findPlayers()&quot;&gt;
  &lt;ul class=&quot;navlist&quot;&gt;
    &lt;li&gt;&lt;input type=&quot;text&quot; data-ng-model=&quot;search.name&quot; placeholder=&quot;Player name&quot;&gt;&lt;/li&gt;
    &lt;li data-ng-include=&quot;&#39;views/partials/nflteamselect.html&#39;&quot;&gt;&lt;/li&gt;
    &lt;li data-ng-include=&quot;&#39;views/partials/positionselect.html&#39;&quot;&gt;&lt;/li&gt;
    &lt;li data-ng-include=&quot;&#39;views/partials/limitselect.html&#39;&quot;&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;th&gt;Player&lt;/th&gt;
      &lt;th&gt;Position&lt;/th&gt;
      &lt;th&gt;Team&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr data-ng-repeat=&quot;player in players | filter:search | limitTo:searchsize.limit&quot;&gt;
      &lt;td&gt;{{ player.name }}&lt;span data-ng-show=&quot;player.num&quot;&gt; - #{{ player.num }}&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;{{ positions[player.pos].abbr }}&lt;/td&gt;
      &lt;td&gt;{{ nflteams[player.team].abbr }}&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;div data-ng-controller=&quot;PlayersController&quot; data-ng-init=&quot;findPlayers()&quot;&gt;
  &lt;ul class=&quot;navlist&quot;&gt;
    &lt;li&gt;&lt;input type=&quot;text&quot; data-ng-model=&quot;search.name&quot; placeholder=&quot;Player name&quot;&gt;&lt;/li&gt;
    &lt;li data-ng-include=&quot;&#39;views/partials/nflteamselect.html&#39;&quot;&gt;&lt;/li&gt;
    &lt;li data-ng-include=&quot;&#39;views/partials/positionselect.html&#39;&quot;&gt;&lt;/li&gt;
    &lt;li data-ng-include=&quot;&#39;views/partials/limitselect.html&#39;&quot;&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;th&gt;Player&lt;/th&gt;
      &lt;th&gt;Position&lt;/th&gt;
      &lt;th&gt;Team&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr data-ng-repeat=&quot;player in players | filter:search | limitTo:searchsize.limit&quot;&gt;
      &lt;td&gt;{{ player.name }}&lt;span data-ng-show=&quot;player.num&quot;&gt; - #{{ player.num }}&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;{{ positions[player.pos].abbr }}&lt;/td&gt;
      &lt;td&gt;{{ nflteams[player.team].abbr }}&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-526e1d66d90f992066000153" class="item-wrap">


  <div class="content-wrapper">

      <p>Create the three partials listed under ng-include directives in a new /partials directory. We’ll be reusing these later, this is the reason for the use of ng-include.</p>

  </div>

</div>

              <div id="item-526e1d66d90f992066000154" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1d66d90f992066000154" class="task-box cbox-trigger cbid-526e1d66d90f992066000154">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>nflteamselect.html:<br></p>

  </div>

</div>

              <div id="item-526e1d66d90f992066000155" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/partials/nflteamselect.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;select data-ng-model=&quot;search.team&quot;&gt;
  &lt;option value=&quot;&quot;&gt;All NFL teams&lt;/option&gt;
  &lt;option data-ng-repeat=&quot;nflteam in nflteams&quot; value=&quot;{{$index}}&quot;&gt;{{nflteam.team}}&lt;/option&gt;
&lt;/select&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;select data-ng-model=&quot;search.team&quot;&gt;
  &lt;option value=&quot;&quot;&gt;All NFL teams&lt;/option&gt;
  &lt;option data-ng-repeat=&quot;nflteam in nflteams&quot; value=&quot;{{$index}}&quot;&gt;{{nflteam.team}}&lt;/option&gt;
&lt;/select&gt;</textarea>

  </div>

</div>

              <div id="item-526e1d66d90f992066000156" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1d66d90f992066000156" class="task-box cbox-trigger cbid-526e1d66d90f992066000156">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>positionselect.html:</p>

  </div>

</div>

              <div id="item-526e1d66d90f992066000157" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/partials/positionselect.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;select data-ng-model=&quot;search.pos&quot;&gt;
  &lt;option value=&quot;&quot;&gt;All positions&lt;/option&gt;
  &lt;option data-ng-repeat=&quot;position in positions&quot; value=&quot;{{$index.toString()}}&quot;&gt;{{position.abbr}}&lt;/option&gt;
&lt;/select&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;select data-ng-model=&quot;search.pos&quot;&gt;
  &lt;option value=&quot;&quot;&gt;All positions&lt;/option&gt;
  &lt;option data-ng-repeat=&quot;position in positions&quot; value=&quot;{{$index.toString()}}&quot;&gt;{{position.abbr}}&lt;/option&gt;
&lt;/select&gt;</textarea>

  </div>

</div>

              <div id="item-526e1d66d90f992066000158" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1d66d90f992066000158" class="task-box cbox-trigger cbid-526e1d66d90f992066000158">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>limitselect.html:</p>

  </div>

</div>

              <div id="item-526e1d66d90f992066000159" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/partials/limitselect.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;select data-ng-model=&quot;searchsize.limit&quot;&gt;
  &lt;option value=&quot;10&quot;&gt;10&lt;/option&gt;
  &lt;option value=&quot;25&quot;&gt;25&lt;/option&gt;
  &lt;option value=&quot;50&quot;&gt;50&lt;/option&gt;
&lt;/select&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;select data-ng-model=&quot;searchsize.limit&quot;&gt;
  &lt;option value=&quot;10&quot;&gt;10&lt;/option&gt;
  &lt;option value=&quot;25&quot;&gt;25&lt;/option&gt;
  &lt;option value=&quot;50&quot;&gt;50&lt;/option&gt;
&lt;/select&gt;</textarea>

  </div>

</div>

              <div id="item-526e1d66d90f99206600015a" class="item-wrap">


  <div class="content-wrapper">

      <p>The search object will be taken from the positions and nflteams dropdowns, as well as the text input. The object’s attributes will be matched up against those in the players objects, and matching ones will be filtered out. You are now also using a limit, taken from the searchsize.limit dropdown.</p>

  </div>

</div>

              <div id="item-526e1d66d90f99206600015b" class="item-wrap">


  <div class="content-wrapper">

      <p>If you did everything properly, you should now be able to filter players by name, position, team, and limit the number of results.&nbsp;Give yourself a pat on the back, this is pretty cool.<br></p>

  </div>

</div>

              <div id="item-526e1d66d90f99206600015c" class="item-wrap">


  <div class="content-wrapper">

      <h2>Corner Cases</h2>

  </div>

</div>

              <div id="item-526e1d66d90f99206600015d" class="item-wrap">


  <div class="content-wrapper">

      <p>If you play around with the player picker enough, you might have noticed that filtering by team doesn’t QUITE work correctly. Selecting, for example, to filter for players on Arizona returns players on Arizona, Detroit, New York, and Tennessee. This is because the indexes of these teams are 0, 10, 20, and 30, and you are searching for teams against the index ‘0’. Angular’s returns all results with a ‘0’ in their team index, as this is technically a match. You must create a custom filter that will return values with exact matches, not matching substrings.</p>

  </div>

</div>

              <div id="item-526e1d66d90f99206600015d" class="item-wrap">


  <div class="content-wrapper">

      <p>AngularJS v1.1.5 introduced the comparator option for filters, which allows the user to use either presets, or a custom comparison function, to determine what the filter will return. For your purposes, passing in ‘true’ will require identical values for a match to be recognized. The comparator defaults to the substring match that you are using now.</p>

  </div>

</div>

              <div id="item-526e1e17d90f992066000283" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1e17d90f992066000283" class="task-box cbox-trigger cbid-526e1e17d90f992066000283">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Read more on ngFilter in the <a href="http://code.angularjs.org/1.1.5/docs/api/ng.filter:filter">API documentation</a><br></p>

  </div>

</div>

              <div id="item-526e1e17d90f992066000284" class="item-wrap">


  <div class="content-wrapper">

      <h2>Refactor</h2>

  </div>

</div>

              <div id="item-526e1e17d90f992066000285" class="item-wrap">


  <div class="content-wrapper">

      <p>Each comparator value that is applied to a filter is applied to the entire search object. You don’t want to use exact string matches for the player names, only for the position and NFL team dropdowns. Thus, you will need to separate them out into two search objects, and filter separately.<br></p>

  </div>

</div>

              <div id="item-526e1e17d90f992066000286" class="item-wrap">


  <div class="content-wrapper">

      <p>Return to your directive templates and attach them to a new ‘strictsearch’ model:<br></p>

  </div>

</div>

              <div id="item-526e1e17d90f992066000287" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1e17d90f992066000287" class="task-box cbox-trigger cbid-526e1e17d90f992066000287">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>positionselect.html:</p>

  </div>

</div>

              <div id="item-526e1e17d90f992066000288" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/partials/positionselect.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;select data-ng-model=&quot;strictsearch.pos&quot;&gt;
  &lt;option value=&quot;&quot;&gt;All positions&lt;/option&gt;
  &lt;option data-ng-repeat=&quot;position in positions&quot; value=&quot;{{$index.toString()}}&quot;&gt;{{position.abbr}}&lt;/option&gt;
&lt;/select&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;select data-ng-model=&quot;strictsearch.pos&quot;&gt;
  &lt;option value=&quot;&quot;&gt;All positions&lt;/option&gt;
  &lt;option data-ng-repeat=&quot;position in positions&quot; value=&quot;{{$index.toString()}}&quot;&gt;{{position.abbr}}&lt;/option&gt;
&lt;/select&gt;</textarea>

  </div>

</div>

              <div id="item-526e1e17d90f992066000289" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1e17d90f992066000289" class="task-box cbox-trigger cbid-526e1e17d90f992066000289">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>nflteamselect.html:</p>

  </div>

</div>

              <div id="item-526e1e17d90f99206600028a" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/partials/nflteamselect.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;select data-ng-model=&quot;strictsearch.team&quot;&gt;
  &lt;option value=&quot;&quot;&gt;All NFL teams&lt;/option&gt;
  &lt;option data-ng-repeat=&quot;nflteam in nflteams&quot; value=&quot;{{$index}}&quot;&gt;{{nflteam.team}}&lt;/option&gt;
&lt;/select&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;select data-ng-model=&quot;strictsearch.team&quot;&gt;
  &lt;option value=&quot;&quot;&gt;All NFL teams&lt;/option&gt;
  &lt;option data-ng-repeat=&quot;nflteam in nflteams&quot; value=&quot;{{$index}}&quot;&gt;{{nflteam.team}}&lt;/option&gt;
&lt;/select&gt;</textarea>

  </div>

</div>

              <div id="item-526e1e17d90f99206600028b" class="item-wrap">


  <div class="content-wrapper">

      <p>Now you can chain the filters with separate objects, applying different comparators to each one. Note that the comparator argument defaults to ‘false’ &nbsp;</p>

  </div>

</div>

              <div id="item-526e1e17d90f99206600028c" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e1e17d90f99206600028c" class="task-box cbox-trigger cbid-526e1e17d90f99206600028c">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Modify list.html as follows:<br></p>

  </div>

</div>

              <div id="item-526e1e17d90f99206600028d" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/players/list.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:14">
    &lt;tr data-ng-repeat=&quot;player in players | filter:search | filter:strictsearch:true | limitTo:searchsize.limit&quot;&gt;
      &lt;td&gt;{{ player.name }}&lt;span data-ng-show=&quot;player.num&quot;&gt; - #{{ player.num }}&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;{{ positions[player.pos].abbr }}&lt;/td&gt;
      &lt;td&gt;{{ nflteams[player.team].abbr }}&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none">    &lt;tr data-ng-repeat=&quot;player in players | filter:search | filter:strictsearch:true | limitTo:searchsize.limit&quot;&gt;
      &lt;td&gt;{{ player.name }}&lt;span data-ng-show=&quot;player.num&quot;&gt; - #{{ player.num }}&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;{{ positions[player.pos].abbr }}&lt;/td&gt;
      &lt;td&gt;{{ nflteams[player.team].abbr }}&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-526e1e17d90f99206600028e" class="item-wrap">


  <div class="content-wrapper">

      <p>With this, you are now able to filter the players correctly by team, position, and name.</p>

  </div>

</div>

              <div id="item-526e9231d90f99661f00032d" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e9231d90f99661f00032d" class="task-box cbox-trigger cbid-526e9231d90f99661f00032d">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Add in a players button to the header:</p>

  </div>

</div>

              <div id="item-526e9231d90f99661f00032e" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/headercontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:24">
      , {
          &quot;title&quot;: &quot;Players&quot;,
          &quot;link&quot;: &quot;/players&quot;
        }</pre>
        <textarea class="codedata" style="display:none">      , {
          &quot;title&quot;: &quot;Players&quot;,
          &quot;link&quot;: &quot;/players&quot;
        }</textarea>

  </div>

</div>

              <div id="item-526e9231d90f99661f00032f" class="item-wrap">


  <div class="content-wrapper">

      <h2>What's Next<br></h2>

  </div>

</div>

              <div id="item-526ca3af0717fc4a8f000640" class="item-wrap">


  <div class="content-wrapper">

      <p>You now have learned many of the basic building blocks necessary to put together an AngularJS/Firebase application. Everything beyond this point is implementation of advanced topics on top of what you have just learned.</p>

  </div>

</div>

              <div id="item-526e2089d90f9920660003c4" class="item-wrap">


  <div class="content-wrapper">

      <h1>Implementing Fantasy Teams</h1>

  </div>

</div>

              <div id="item-526e9330d90f99661f00046b" class="item-wrap">


  <div class="content-wrapper">

      <p>Next, we’re going to work on building out fantasy teams functionality. Initially, we’re going to with a very simple fantasy teams model: every fantasy team will have exactly one owner, will belong to exactly one league, and have a string name. The model will grow in complexity as we move further through the tutorial, but this is a good place to start, as it brings several critical Firebase concepts into the spotlight.<br></p>

  </div>

</div>

              <div id="item-526e9330d90f99661f00046c" class="item-wrap">


  <div class="content-wrapper">

      <h2>Denormalized Data</h2>

  </div>

</div>

              <div id="item-526e9330d90f99661f00046d" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e9330d90f99661f00046d" class="task-box cbox-trigger cbid-526e9330d90f99661f00046d">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>As a primer, read through this <a href="https://www.firebase.com/blog/2013-04-12-denormalizing-is-normal.html">Firebase blog post&nbsp;</a><br></p>

  </div>

</div>

              <div id="item-526e9330d90f99661f00046e" class="item-wrap">


  <div class="content-wrapper">

      <p>In the context of real-time data, the concept of ‘where’ queries don’t make sense anymore. We still have collections of objects with various attributes, but there is no search mechanism to gather a subset with certain properties. As mentioned in the blog post, the correct way to implement associations is for there to be 2-way references between every associated object that will be queried against the referenced object.</p>

  </div>

</div>

              <div id="item-526e9330d90f99661f00046f" class="item-wrap">


  <div class="content-wrapper">

      <p>So how will this work with leagues and fantasy teams?&nbsp;</p>

  </div>

</div>

              <div id="item-526e9330d90f99661f000470" class="item-wrap">


  <div class="content-wrapper">

      <p>Recall that every fantasy team will be owned by a single league, and that a league will have many fantasy teams. This is a typical one-to-many association that would be trivial to implement in MySQL or MongoDB in their respective patterns. In Firebase, though, we need to consider which queries we will want to execute, and make the proper associations. We will want to know which fantasy teams are in a league, and we will want to know which league a fantasy team belongs to. Moreover, we will need to accomplish these operations without retrieving every single fantasy team and league on the frontend and searching there.&nbsp;</p>

  </div>

</div>

              <div id="item-526e9330d90f99661f000471" class="item-wrap">


  <div class="content-wrapper">

      <p>This, as you might have surmised, is accomplished with denormalization. Specifically, every league will have to contain data referencing which fantasy teams are inside it, and every fantasy team will have to contain data referencing which league it belongs to. As you would expect, this is done with the unique Firebase IDs of the data.&nbsp;</p>

  </div>

</div>

              <div id="item-526e9330d90f99661f000472" class="item-wrap">


  <div class="content-wrapper">

      <p>We will also want to provide the same model for users/fantasy teams, and this is implemented in the same way as leagues, so we will just build them out simultaneously.</p>

  </div>

</div>

              <div id="item-526e9330d90f99661f000473" class="item-wrap">


  <div class="content-wrapper">

      <p>We can flap our gums until we’re blue in the face, but it’s not as good as actually writing the code, so let’s get to it.</p>

  </div>

</div>

              <div id="item-526e2089d90f9920660003c5" class="item-wrap">


  <div class="content-wrapper">

      <h2>Fantasy Team Service<br></h2>

  </div>

</div>

              <div id="item-526e9330d90f99661f000474" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e9330d90f99661f000474" class="task-box cbox-trigger cbid-526e9330d90f99661f000474">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Add fantasy teams to the reference service:</p>

  </div>

</div>

              <div id="item-526e9330d90f99661f000475" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/services/firerefservice.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:16">
      , fantasyTeams: function() {
          return new Firebase(FBURL+&#39;/fantasyTeams&#39;);
        }</pre>
        <textarea class="codedata" style="display:none">      , fantasyTeams: function() {
          return new Firebase(FBURL+&#39;/fantasyTeams&#39;);
        }</textarea>

  </div>

</div>

              <div id="item-526e9330d90f99661f000476" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e9330d90f99661f000476" class="task-box cbox-trigger cbid-526e9330d90f99661f000476">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Create the FantasyTeam service:<br></p>

  </div>

</div>

              <div id="item-526e9330d90f99661f000477" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/services/fantasyteamservice.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.fantasyTeams&#39;, [])
  .factory(&#39;FantasyTeams&#39;, [&#39;$q&#39;, &#39;angularFireCollection&#39;, &#39;FireRef&#39;,
    function($q, angularFireCollection, FireRef) {
      return {
        collection: function(cb) {
          return angularFireCollection(FireRef.fantasyTeams(),cb);
        }
      , find: function(fantasyTeamId) {
          return FireRef.fantasyTeams().child(fantasyTeamId);
        }
      , create: function(fantasyTeam, owner, cb) {
          var deferred = $q.defer();
          var name = FireRef.fantasyTeams().push({
            name: fantasyTeam.name,
            leagueId: fantasyTeam.leagueId,
            ownerId: owner.id
          }, cb).name()
          FireRef.leagues().child(&#39;/&#39;+fantasyTeam.leagueId+&#39;/fantasyTeams/&#39;+name).set(true);
          FireRef.users().child(&#39;/&#39;+owner.id+&#39;/fantasyTeams/&#39;+name).set(true);
          deferred.resolve(name);
          return deferred.promise;
        }
      , removeFantasyTeam: function(fantasyTeamId) {
          var fantasyTeam = this.find(fantasyTeamId);
          fantasyTeam.once(&#39;value&#39;,function(data) {
            FireRef.leagues().child(&#39;/&#39;+data.val().leagueId).child(&#39;/fantasyTeams/&#39;+fantasyTeamId).remove();
            FireRef.users().child(&#39;/&#39;+data.val().ownerId).child(&#39;/fantasyTeams/&#39;+fantasyTeamId).remove();
          })
          fantasyTeam.remove();
          return;
        }
      };
    }])</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.services.fantasyTeams&#39;, [])
  .factory(&#39;FantasyTeams&#39;, [&#39;$q&#39;, &#39;angularFireCollection&#39;, &#39;FireRef&#39;,
    function($q, angularFireCollection, FireRef) {
      return {
        collection: function(cb) {
          return angularFireCollection(FireRef.fantasyTeams(),cb);
        }
      , find: function(fantasyTeamId) {
          return FireRef.fantasyTeams().child(fantasyTeamId);
        }
      , create: function(fantasyTeam, owner, cb) {
          var deferred = $q.defer();
          var name = FireRef.fantasyTeams().push({
            name: fantasyTeam.name,
            leagueId: fantasyTeam.leagueId,
            ownerId: owner.id
          }, cb).name()
          FireRef.leagues().child(&#39;/&#39;+fantasyTeam.leagueId+&#39;/fantasyTeams/&#39;+name).set(true);
          FireRef.users().child(&#39;/&#39;+owner.id+&#39;/fantasyTeams/&#39;+name).set(true);
          deferred.resolve(name);
          return deferred.promise;
        }
      , removeFantasyTeam: function(fantasyTeamId) {
          var fantasyTeam = this.find(fantasyTeamId);
          fantasyTeam.once(&#39;value&#39;,function(data) {
            FireRef.leagues().child(&#39;/&#39;+data.val().leagueId).child(&#39;/fantasyTeams/&#39;+fantasyTeamId).remove();
            FireRef.users().child(&#39;/&#39;+data.val().ownerId).child(&#39;/fantasyTeams/&#39;+fantasyTeamId).remove();
          })
          fantasyTeam.remove();
          return;
        }
      };
    }])</textarea>

  </div>

</div>

              <div id="item-526e9330d90f99661f000478" class="item-wrap">


  <div class="content-wrapper">

      <p>collection() and find() should look familiar to you. create() and removeFantasyTeam(), however, have new pieces.&nbsp;</p>

  </div>

</div>

              <div id="item-526e9330d90f99661f000479" class="item-wrap">


  <div class="content-wrapper">

      <p>In create(), we’re setting up a promise for the first time. We’re going to queue up a couple Firebase writes, and we don’t want the page to redirect until the writes are done and we have the ID of the new object. After we push the fantasyTeam object to Firebase, we know the name() method returns the unique ID that was assigned to it. Since we are trying to denormalize the data, we have to also update the user and league model to reflect that each owns a new fantasy team. Thus, we simply set an attribute of the new id to true inside their respective fantasyTeams/ locations. With this, the user and league data contains which fantasy teams are owned by them, and the fantasy teams themselves contain id references to the user and league which it is owned by. With this data, we can easily find the data which answers the inquiry, “which fantasy teams does this league/user own”, and “which league/user is this fantasy team owned by?”. Since we need the ID of the fantasyTeam for the URL, we’ll have that be returned from the promise to be used in the controller.</p>

  </div>

</div>

              <div id="item-526e9330d90f99661f00047a" class="item-wrap">


  <div class="content-wrapper">

      <p>In removeFantasyTeam(), we are simply doing the opposite of create(). Before we remove the main object from the Firebase, we first read the data of the object a single time using once(), and unset the references inside the user and league data objects. Once these have been removed, we can remove the fantasy team data object safely.</p>

  </div>

</div>

              <div id="item-526ca3af0717fc4a8f000641" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526ca3af0717fc4a8f000641" class="task-box cbox-trigger cbid-526ca3af0717fc4a8f000641">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Make sure and include the service file in index.html<br></p>

  </div>

</div>

              <div id="item-526e93b9d90f99661f0005c4" class="item-wrap">


  <div class="content-wrapper">

      <h2>Fantasy Team Controller</h2>

  </div>

</div>

              <div id="item-526e93b9d90f99661f0005c5" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e93b9d90f99661f0005c5" class="task-box cbox-trigger cbid-526e93b9d90f99661f0005c5">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Create the fantasy teams controller:<br></p>

  </div>

</div>

              <div id="item-526e93b9d90f99661f0005c6" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/fantasyteamcontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.fantasyTeams&#39;, [&#39;fantasyApp.services.fantasyTeams&#39;])
  .controller(&#39;FantasyTeamsController&#39;, [&#39;$scope&#39;,&#39;$routeParams&#39;, &#39;$location&#39;, &#39;angularFire&#39;, &#39;Leagues&#39;, &#39;FantasyTeams&#39;,&#39;FireRef&#39;,
    function($scope, $routeParams, $location, angularFire, Leagues, FantasyTeams, FireRef) {

      $scope.fantasyTeamId = $routeParams.fantasyTeamId;
      $scope.noFantasyTeam = !$routeParams.fantasyTeamId;

      $scope.findFantasyTeams = function() {
        $scope.fantasyTeams = FantasyTeams.collection();
      }

      $scope.findOneFantasyTeam = function () {
        if(!!$scope.fantasyTeamId) {
          angularFire(FantasyTeams.find($routeParams.fantasyTeamId), $scope, &#39;fantasyTeam&#39;);
        }
      }

      $scope.findLeagues = function () {
        $scope.leagues = Leagues.collection();
      }

      $scope.create = function() {
        FantasyTeams.create($scope.fantasyTeam, $scope.auth).then(function(fantasyTeamId) {
          $scope.fantasyTeam = null;
          $location.path(&#39;/fantasyteams/&#39;+fantasyTeamId);
        })
      }

      $scope.removeFantasyTeam = function(fantasyTeamId) {
        FantasyTeams.removeFantasyTeam(fantasyTeamId);
      }
    }])</pre>
        <textarea class="codedata" style="display:none">&#39;use strict&#39;;

angular.module(&#39;fantasyApp.controllers.fantasyTeams&#39;, [&#39;fantasyApp.services.fantasyTeams&#39;])
  .controller(&#39;FantasyTeamsController&#39;, [&#39;$scope&#39;,&#39;$routeParams&#39;, &#39;$location&#39;, &#39;angularFire&#39;, &#39;Leagues&#39;, &#39;FantasyTeams&#39;,&#39;FireRef&#39;,
    function($scope, $routeParams, $location, angularFire, Leagues, FantasyTeams, FireRef) {

      $scope.fantasyTeamId = $routeParams.fantasyTeamId;
      $scope.noFantasyTeam = !$routeParams.fantasyTeamId;

      $scope.findFantasyTeams = function() {
        $scope.fantasyTeams = FantasyTeams.collection();
      }

      $scope.findOneFantasyTeam = function () {
        if(!!$scope.fantasyTeamId) {
          angularFire(FantasyTeams.find($routeParams.fantasyTeamId), $scope, &#39;fantasyTeam&#39;);
        }
      }

      $scope.findLeagues = function () {
        $scope.leagues = Leagues.collection();
      }

      $scope.create = function() {
        FantasyTeams.create($scope.fantasyTeam, $scope.auth).then(function(fantasyTeamId) {
          $scope.fantasyTeam = null;
          $location.path(&#39;/fantasyteams/&#39;+fantasyTeamId);
        })
      }

      $scope.removeFantasyTeam = function(fantasyTeamId) {
        FantasyTeams.removeFantasyTeam(fantasyTeamId);
      }
    }])</textarea>

  </div>

</div>

              <div id="item-526e93b9d90f99661f0005c7" class="item-wrap">


  <div class="content-wrapper">

      <p>This is essentially identical to the leagues controller. This should make you feel good - this means we’re appropriately abstracting the dirty details of interacting with Firebase to the services. The only major changes here are the injection of Leagues, and the findLeagues() method, which simply attaches the leagues collection to the scope. Also note that, since the service returns a promise, the create() method is slightly different.</p>

  </div>

</div>

              <div id="item-526e93b9d90f99661f0005c8" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e93b9d90f99661f0005c8" class="task-box cbox-trigger cbid-526e93b9d90f99661f0005c8">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Make sure to add the controller file to index.html, and add it as a dependency in app.js<br></p>

  </div>

</div>

              <div id="item-526e93b9d90f99661f0005c9" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e93b9d90f99661f0005c9" class="task-box cbox-trigger cbid-526e93b9d90f99661f0005c9">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Next, add the new fantasy team routes:<br></p>

  </div>

</div>

              <div id="item-526e93b9d90f99661f0005ca" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/config.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:20">
      .when(&#39;/fantasyteams&#39;,                      { templateUrl: &#39;views/fantasyteams/list.html&#39;, authRequired: true })
      .when(&#39;/fantasyteams/create&#39;,               { templateUrl: &#39;views/fantasyteams/edit.html&#39;, authRequired: true })
      .when(&#39;/fantasyteams/:fantasyTeamId&#39;,       { templateUrl: &#39;views/fantasyteams/view.html&#39;, authRequired: true })
      .when(&#39;/fantasyteams/:fantasyTeamId/edit&#39;,  { templateUrl: &#39;views/fantasyteams/edit.html&#39;, authRequired: true })</pre>
        <textarea class="codedata" style="display:none">      .when(&#39;/fantasyteams&#39;,                      { templateUrl: &#39;views/fantasyteams/list.html&#39;, authRequired: true })
      .when(&#39;/fantasyteams/create&#39;,               { templateUrl: &#39;views/fantasyteams/edit.html&#39;, authRequired: true })
      .when(&#39;/fantasyteams/:fantasyTeamId&#39;,       { templateUrl: &#39;views/fantasyteams/view.html&#39;, authRequired: true })
      .when(&#39;/fantasyteams/:fantasyTeamId/edit&#39;,  { templateUrl: &#39;views/fantasyteams/edit.html&#39;, authRequired: true })</textarea>

  </div>

</div>

              <div id="item-526e93b9d90f99661f0005cb" class="item-wrap">


  <div class="content-wrapper">

      <h2>Fantasy Team Views</h2>

  </div>

</div>

              <div id="item-526e945fd90f99661f00071f" class="item-wrap">


  <div class="content-wrapper">

      <p>Now create the three views in a new directory, /fantasyteams:<br></p>

  </div>

</div>

              <div id="item-526e945fd90f99661f000720" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e945fd90f99661f000720" class="task-box cbox-trigger cbid-526e945fd90f99661f000720">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>view.html:<br></p>

  </div>

</div>

              <div id="item-526e945fd90f99661f000721" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/fantasyteams/view.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;div data-ng-controller=&quot;FantasyTeamsController&quot; data-ng-init=&quot;findOneFantasyTeam()&quot;&gt;
  &lt;h2&gt;{{ fantasyTeam.name }}&lt;/h2&gt;
  &lt;p&gt;&lt;strong&gt;Owner: &lt;/strong&gt;{{ fantasyTeam.ownerId }}&lt;/p&gt;
  &lt;p&gt;&lt;strong&gt;League: &lt;/strong&gt;{{ fantasyTeam.leagueId }}&lt;/p&gt; 
  &lt;br&gt;
  &lt;a href=&quot;#/fantasyteams&quot;&gt;View all fantasy teams&lt;/a&gt;
&lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;div data-ng-controller=&quot;FantasyTeamsController&quot; data-ng-init=&quot;findOneFantasyTeam()&quot;&gt;
  &lt;h2&gt;{{ fantasyTeam.name }}&lt;/h2&gt;
  &lt;p&gt;&lt;strong&gt;Owner: &lt;/strong&gt;{{ fantasyTeam.ownerId }}&lt;/p&gt;
  &lt;p&gt;&lt;strong&gt;League: &lt;/strong&gt;{{ fantasyTeam.leagueId }}&lt;/p&gt; 
  &lt;br&gt;
  &lt;a href=&quot;#/fantasyteams&quot;&gt;View all fantasy teams&lt;/a&gt;
&lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-526e945fd90f99661f000722" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e945fd90f99661f000722" class="task-box cbox-trigger cbid-526e945fd90f99661f000722">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>edit.html:</p>

  </div>

</div>

              <div id="item-526e945fd90f99661f000723" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/fantasyteams/edit.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;div data-ng-controller=&quot;FantasyTeamsController&quot; data-ng-init=&quot;findOneFantasyTeam();findLeagues()&quot;&gt;
  &lt;form class=&quot;form-horizontal&quot;&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;label class=&quot;control-label&quot; for=&quot;name&quot;&gt;Name&lt;/label&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;input type=&quot;text&quot; data-ng-model=&quot;fantasyTeam.name&quot; id=&quot;name&quot; placeholder=&quot;Name&quot;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;label class=&quot;control-label&quot; for=&quot;league&quot;&gt;League&lt;/label&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;select 
          data-ng-model=&quot;fantasyTeam.leagueId&quot; 
          name=&quot;league&quot; 
          required=&quot;required&quot;
          data-ng-options=&quot;c.$id as c.name for c in leagues&quot;&gt;
         &lt;!--  &lt;option data-ng-show=&quot;noFantasyTeam&quot; value=&quot;&quot;&gt;Choose a league:&lt;/option&gt; --&gt;
        &lt;/select&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;button data-ng-click=&quot;create()&quot; data-ng-show=&quot;noFantasyTeam&quot;&gt;Create Fantasy Team&lt;/button&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;a href=&quot;#/fantasyteams&quot;&gt;View all Fantasy Teams&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/form&gt;
  &lt;p data-ng-show=&quot;err&quot; class=&quot;error&quot;&gt;{{err}}&lt;/p&gt;
&lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;div data-ng-controller=&quot;FantasyTeamsController&quot; data-ng-init=&quot;findOneFantasyTeam();findLeagues()&quot;&gt;
  &lt;form class=&quot;form-horizontal&quot;&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;label class=&quot;control-label&quot; for=&quot;name&quot;&gt;Name&lt;/label&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;input type=&quot;text&quot; data-ng-model=&quot;fantasyTeam.name&quot; id=&quot;name&quot; placeholder=&quot;Name&quot;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;label class=&quot;control-label&quot; for=&quot;league&quot;&gt;League&lt;/label&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;select 
          data-ng-model=&quot;fantasyTeam.leagueId&quot; 
          name=&quot;league&quot; 
          required=&quot;required&quot;
          data-ng-options=&quot;c.$id as c.name for c in leagues&quot;&gt;
         &lt;!--  &lt;option data-ng-show=&quot;noFantasyTeam&quot; value=&quot;&quot;&gt;Choose a league:&lt;/option&gt; --&gt;
        &lt;/select&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;button data-ng-click=&quot;create()&quot; data-ng-show=&quot;noFantasyTeam&quot;&gt;Create Fantasy Team&lt;/button&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;control-group&quot;&gt;
      &lt;div class=&quot;controls&quot;&gt;
        &lt;a href=&quot;#/fantasyteams&quot;&gt;View all Fantasy Teams&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/form&gt;
  &lt;p data-ng-show=&quot;err&quot; class=&quot;error&quot;&gt;{{err}}&lt;/p&gt;
&lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-526e945fd90f99661f000724" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e945fd90f99661f000724" class="task-box cbox-trigger cbid-526e945fd90f99661f000724">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>list.html:</p>

  </div>

</div>

              <div id="item-526e945fd90f99661f000725" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/views/fantasyteams/list.html</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:1">
&lt;div data-ng-controller=&quot;FantasyTeamsController&quot; data-ng-init=&quot;findFantasyTeams()&quot;&gt;
  &lt;h2&gt;Fantasy Teams&lt;/h2&gt;
  &lt;h3&gt;All Teams&lt;/h3&gt;
  &lt;ul class=&quot;unstyled&quot;&gt;
    &lt;li data-ng-repeat=&quot;fantasyTeam in fantasyTeams&quot;&gt;
      &lt;a href=&quot;#/fantasyteams/{{ fantasyTeam.$id }}&quot;&gt;{{fantasyTeam.name}}&lt;/a&gt;
      (&lt;a href=&quot;#/fantasyteams/{{ fantasyTeam.$id }}/edit&quot;&gt;Edit&lt;/a&gt;)
      (&lt;a href=&quot;&quot; data-ng-click=&quot;removeFantasyTeam(&#39;{{ fantasyTeam.$id }}&#39;)&quot; &gt;Remove&lt;/a&gt;)
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;br&gt;
  &lt;a href=&quot;#/fantasyteams/create&quot;&gt;Create a new fantasy team&lt;/a&gt;
&lt;/div&gt;</pre>
        <textarea class="codedata" style="display:none">&lt;div data-ng-controller=&quot;FantasyTeamsController&quot; data-ng-init=&quot;findFantasyTeams()&quot;&gt;
  &lt;h2&gt;Fantasy Teams&lt;/h2&gt;
  &lt;h3&gt;All Teams&lt;/h3&gt;
  &lt;ul class=&quot;unstyled&quot;&gt;
    &lt;li data-ng-repeat=&quot;fantasyTeam in fantasyTeams&quot;&gt;
      &lt;a href=&quot;#/fantasyteams/{{ fantasyTeam.$id }}&quot;&gt;{{fantasyTeam.name}}&lt;/a&gt;
      (&lt;a href=&quot;#/fantasyteams/{{ fantasyTeam.$id }}/edit&quot;&gt;Edit&lt;/a&gt;)
      (&lt;a href=&quot;&quot; data-ng-click=&quot;removeFantasyTeam(&#39;{{ fantasyTeam.$id }}&#39;)&quot; &gt;Remove&lt;/a&gt;)
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;br&gt;
  &lt;a href=&quot;#/fantasyteams/create&quot;&gt;Create a new fantasy team&lt;/a&gt;
&lt;/div&gt;</textarea>

  </div>

</div>

              <div id="item-item-523a34ee4af3db280a0001a5" class="item-wrap">


  <div class="content-wrapper">

      <p>In edit.html, you are seeing the ng-options directive for the first time. In the ng-init directive, you are invoking the findLeagues() method to attach a collection of all leagues returned from the service to the scope. ng-options takes this enumerable object ‘leagues’, iterates through each league ‘c’, and creates an &lt;option&gt; with text ‘c.name’ and value ‘c._id’.&nbsp;<br></p>

  </div>

</div>

              <div id="item-item-521e5428fe03242c230004c9" class="item-wrap">


  <div class="content-wrapper">

      <p>The default &lt;option&gt; entry is provided commented out to demonstrate an interesting aspect of how AngularJS handles the view interacting with the model. When creating a new fantasy team, without an default &lt;option&gt; with an empty value provided, you will notice that Angular provides a blank one to you anyway on a new page load. However, when an option is selected, the blank one will disappear. This is because, when building out the ng-options directive, the ng-model is initialized as empty. None of the values of the &lt;option&gt;s in the league array match that value, so it adds a blank one. Once you select an option, the model takes on that value, and the empty &lt;option&gt; is no longer necessary. The ng-show directive is present to remove the option when the data already exists, and the league has already been set.</p>

  </div>

</div>

              <div id="item-526e9846d90f9920660005c2" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e9846d90f9920660005c2" class="task-box cbox-trigger cbid-526e9846d90f9920660005c2">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Uncomment the default &lt;option&gt; above in the view.</p>

  </div>

</div>

              <div id="item-526e9846d90f9920660005c3" class="item-wrap">


  <div class="content-wrapper">

      <h2>Fantasy Team Security</h2>

  </div>

</div>

              <div id="item-526e9898d90f9923df0005c7" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e9898d90f9923df0005c7" class="task-box cbox-trigger cbid-526e9898d90f9923df0005c7">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>Next, let’s add in the security rules for fantasy teams. They are more or less identical to that of leagues:<br></p>

  </div>

</div>

              <div id="item-526e9898d90f9923df0005c8" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">Firebase Security File</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:10">
    &quot;fantasyTeams&quot;: {
      &quot;$fantasyTeam&quot;: {
        &quot;.write&quot;: &quot;auth != null &amp;&amp; (data.child(&#39;ownerId&#39;).val() == auth.id || data.child(&#39;ownerId&#39;).val() == null)&quot;, 
        &quot;.validate&quot;: &quot;newData.hasChildren([&#39;ownerId&#39;,&#39;leagueId&#39;,&#39;name&#39;])&quot;,
        &quot;ownerId&quot;: {
           &quot;.validate&quot;: &quot;auth.id == newData.val()&quot;
        },
        &quot;leagueId&quot;: {
          &quot;.validate&quot;: &quot;newData.val() != &#39;&#39;&quot;
        },
        &quot;name&quot;: {
          &quot;.validate&quot;: &quot;newData.val() != &#39;&#39;&quot;
        }
      }
    },</pre>
        <textarea class="codedata" style="display:none">    &quot;fantasyTeams&quot;: {
      &quot;$fantasyTeam&quot;: {
        &quot;.write&quot;: &quot;auth != null &amp;&amp; (data.child(&#39;ownerId&#39;).val() == auth.id || data.child(&#39;ownerId&#39;).val() == null)&quot;, 
        &quot;.validate&quot;: &quot;newData.hasChildren([&#39;ownerId&#39;,&#39;leagueId&#39;,&#39;name&#39;])&quot;,
        &quot;ownerId&quot;: {
           &quot;.validate&quot;: &quot;auth.id == newData.val()&quot;
        },
        &quot;leagueId&quot;: {
          &quot;.validate&quot;: &quot;newData.val() != &#39;&#39;&quot;
        },
        &quot;name&quot;: {
          &quot;.validate&quot;: &quot;newData.val() != &#39;&#39;&quot;
        }
      }
    },</textarea>

  </div>

</div>

              <div id="item-526e9898d90f9923df0005c9" class="item-wrap">

    <div class="task-wrapper">
      <div data-cbid="526e9898d90f9923df0005c9" class="task-box cbox-trigger cbid-526e9898d90f9923df0005c9">
        <div class="mark">
          <i class="wic-ok"></i>
        </div>
      </div>
    </div>

  <div class="content-wrapper">

      <p>And finally, let’s add a fantasy teams link to the header:</p>

  </div>

</div>

              <div id="item-526e9898d90f9923df0005ca" class="item-wrap">


  <div class="content-wrapper">

          <div class="filename">app/js/controllers/headercontroller.js</div>
        <div class="codeblock-load codeblock-noti display-on-mobile">
          <i class="wic-code"></i> Stop scrolling to load code snippet
        </div>
        <pre class="codeblock linenums:28">
      , {
          &quot;title&quot;: &quot;Fantasy Teams&quot;,
          &quot;link&quot;: &quot;/fantasyteams&quot;
        }</pre>
        <textarea class="codedata" style="display:none">      , {
          &quot;title&quot;: &quot;Fantasy Teams&quot;,
          &quot;link&quot;: &quot;/fantasyteams&quot;
        }</textarea>

  </div>

</div>

              <div id="item-526e9898d90f9923df0005cb" class="item-wrap">


  <div class="content-wrapper">

      <h2>Recap</h2>

  </div>

</div>

              <div id="item-526e9898d90f9923df0005cc" class="item-wrap">


  <div class="content-wrapper">

      <p>At this point, you have learned all the building blocks of how to use Firebase, angularFire, and angularFireAuth effectively, including a primer on object associations.&nbsp;<br></p>

  </div>

</div>

              <div id="item-526e9846d90f9920660005c4" class="item-wrap">


  <div class="content-wrapper">

      <h1>What's Next</h1>

  </div>

</div>

              <div id="item-526e9846d90f9920660005c5" class="item-wrap">


  <div class="content-wrapper">

      <p>This tutorial serves as a broad introduction to using Firebase in an AngularJS application. If you're left wanting more, good news! We're already working on Part 2, in which you will dive into more advanced uses of Firebase. This upcoming section will dive into building a robust real-time object association management infrastructure which will be used in a real-time fantasy draft board.</p>

  </div>

</div>

              <div id="item-526e9846d90f9920660005c6" class="item-wrap">


  <div class="content-wrapper">

      <p><br></p>

  </div>

</div>

              <div id="item-526e93b9d90f99661f0005cc" class="item-wrap">


  <div class="content-wrapper">

      <p><br></p>

  </div>

</div>



          <div class="share-btns">
            <a href="https://twitter.com/intent/tweet?original_referer=http%3A%2F%2Fwww.thinkster.io%2F&text=AngularJS%20Tutorial%3A%20Learn%20to%20Rapidly%20Build%20Real-time%20Web%20Apps%20with%20Firebase%20 %23AngularJS by @mattfriz&tw_p=tweetbutton&url=http%3A%2F%2Fwww.thinkster.io%2Fpick%2FeHPCs7s87O%2Fangularjs-tutorial-learn-to-rapidly-build-real-time-web-apps-with-firebase%3Fref%3Dtwt" class="btn btn-default">
              <i class="wic-twitter"></i> Tweet this
            </a>

            <a href="https://www.facebook.com/sharer/sharer.php?u=http://www.thinkster.io%2Fpick%2FeHPCs7s87O%2Fangularjs-tutorial-learn-to-rapidly-build-real-time-web-apps-with-firebase%3Fref%3Dfb" class="btn btn-default">
              <i class="wic-facebook-squared"></i> Share on Facebook
            </a>
          </div>

        </div>

      <div class="col col-lg-2">
      </div>
    </div>

  </div>

</div><!-- /container -->

<br>



    
<footer>
  <div class="container">
    <div class="row">

      <div class="col col-lg-12">
        &copy; 2013 Thinkster

        &nbsp;&nbsp;&bull;&nbsp;&nbsp;
        <strong>
          <i class="wic-twitter"></i> Follow <a href="https://twitter.com/GoThinkster" target="_blank">@GoThinkster</a>
        </strong>

        &nbsp;&nbsp;&bull;&nbsp;&nbsp;

        <span class="where-its-made">
          Built in sunny Palo Alto <img alt="Sun" src="http://static.thinkster.io/assets/sun-0425fa037da744ac88f915390e167cdb.png" />
        </span>


        <div class="dome">&nbsp;</div>

      </div>


    </div>
  </div>
</footer>


  </div>

